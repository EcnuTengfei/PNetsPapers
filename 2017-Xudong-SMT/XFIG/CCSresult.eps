%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 351.000000 309.000000
%APL_DSC_Encoding: UTF8
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 351 309
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 351 309
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /zero put
dup 34 /one put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<
74727565000900000000000063767420000000000000009C000000186670676D00000000000000B400000428676C796600000000000004DC000002A068656164000000000000077C000000366868656100000000000007B400000024686D747800000000000007D8000000106C6F636100000000000007E80000000A6D61787000000000000007F4000000207072657000000000000008140000004D14000014004B005A00000011FF3A000B0205000C02CA0011B800002C4BB800095058B101018E59B801FF85B844001DB9000900035F5E2DB800012C2020456944B001602DB800022CB800012A212DB800032C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB800042C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB800052C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB800062C2020456944B001602020457D691844B001602DB800072CB800062A2DB800082C4B20B003265358B0801BB040598A8A20B003265358B0022621B0C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B80003265358B0032545B8014050582321B8014023211BB003254523212321591B2159442DB800092C4B535845441B2121592DB8000A2C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB8000B2C2020456944B001602DB8000C2CB8000B2A212DB8000D2C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB8000E2C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB8000F2C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB800102C2020456944B001602020457D691844B001602DB800112CB800102A2DB800122C4B20B003265358B0801BB040598A8A20B0032653582321B0C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B0032653582321B801408A8A1B8A235920B80003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB800132C4B535845441B2121592DB800142C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB800152C2020456944B001602DB800162CB800152A212DB800172C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB800182C2046B00425465258238A592046206A6164B0042546

0004000200000000001E00000200042800030001B800142B01BA0002000200162B01BF0003003E0037002B001F00130000001C2B00BF0002004A0037002B001F00130000001C2B00BA00040004001B2BB8000120457D691844B8000A2BB800002B000000
00>] def
/CharStrings 4 dict dup begin
/.notdef 0 def
/zero 1 def
/one 2 def
/uni2B91 3 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-951 -481 1987 1077}def
/UniqueID 4243299 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C94CF017316529A80F552C33559AB2C21302561FE61E935C1E32B3C9EA963332618F471070EE193F61A94258BC6AD24214B0D5C35EA1380EBC43D26032C674BF749EACE9AA6138229683D0A55CC1DADE0D1BC7253ED7935DEA174D0B3B3FDC813C3221507938E515E8EC68B18161114C33986E36B17A225641088435F9E48837E0F3E1B5A6AF88910614B4368F205C2D59A59FB7426250599C8802395C5627DBB8939A38176F5DD34CA50B13D1730089041DAD0E8115FAC2A19233AFF82D57CD65EE988ED1E197E4844ECAC3C5FC25F627F42737F45F9BA1F4429C9805D92A2E19ED9D52C01EDB702863B54813CD5236574DCB329D27C9AA04DFDFC83AF83B219A21DCAEB5D0FF6C79DCD542C19B83B6DC152B82E1D72520F00A489CA990E81632B20CCCC5F349D98F321C95C175D9C14BC5909A48AB44A479DC432130B9E69EF35F9FE7A49AD8D304147791C2B477A246924A397A90AF4D3360FA59517CF865FC761391038E4FBF9AADB9EF39D89BD23A02204C47EC426FD25E0A71A4DD047AFAAB3C6B5093FC64B87BA4B2C67750E1B9DDF135B3EF74555C799247A93CF4431C96E5021199EB4EE345091BF009B37A4129BC22B9C53B74B339A5C2256E3781014143DAEB7D03C4C97EEBEB3EA9317554EE5DCA93BB7966D8C68CBD1A083233563776DC8879BF4E2E5D4AB967B4362A220C29D42DB08F5BD7164D92D136AF58D935CBCDB5D87C1607E516DAAC666DD3594362400226617A04F4EE430C7AB3FD497
90D2C600FB0A719259970279B76DA55821058A65C774FE83ED7DA14DC0303DEB02299FD2F5A0F59231ECA8B659CE44D72D23A80E218BFB187FA7BA8A063CCDF90921B91851CB0460D5A47BE37D569A399D9ACECBCA3EE13AEDC84B9CD6A0E0AFC44398C65329155341D6322AFF2CAFCD06FDB8A12442C50BA4E8FD818314FD5EEEBF8A27E114EF49E804F5D307C0D25E6C61
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
%RBIBeginFontSubset: STKaitiSC-Bold
%!FontType1-1.0: STKaitiSC-Bold 1.0000.1.0000
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
14 dict begin/FontName /STKaitiSC-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /gid82 put
dup 34 /gid87 put
dup 35 /gid23 put
dup 36 /gid20 put
dup 37 /gid21 put
dup 38 /gid22 put
dup 39 /gid28 put
dup 40 /gid24 put
dup 41 /gid27 put
dup 42 /gid25 put
dup 43 /gid26 put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -84 1 index div -236 2 index div 1044 3 index div 938 5 -1 roll div]cvx def
/sfnts [<


00>] def
/CharStrings 13 dict dup begin
/.notdef 0 def
/gid20 1 def
/gid21 2 def
/gid22 3 def
/gid23 4 def
/gid24 5 def
/gid25 6 def
/gid26 7 def
/gid27 8 def
/gid28 9 def
/gid82 10 def
/gid87 11 def
/gid46456 12 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-84 -236 1044 938}def
/UniqueID 4371360 def
currentdict currentfile eexec

BFD7FD94A8A8D9F5CB33B99E58AA9E6CC24B7CB87075C142CE2F4250037263EB21B7BE0F89C8C33E636A5C6225718987727834F49EEBC30FD686D97A962070E2B9E9C54721FDD43E69528D8F34BEEE4A33A71B82E4ADE7BE44CD4865177F55DFA989723410D15D2CE4CFE25B276D39BBC3BAAD846BF5F4CF77EDFBCF3F1E31CF78E1676140D8A35D349B72F917E5B423D26E47EC8D0E808989DEDEB3AD5869427CFAD6EB0D199D2E85884DF04183031778C7F6B06F820CAF1CB6965A972E13514B4B08F5B3188AB7B3DA8FFAE3D1677934C78B0307AA29DB571E5918591A37EC1BF902FA252E35F3C691B72AE08A65923E21D14871CF731B4B78A5B7C7B75AF1AB315FB0EFD116BB4124B676819ACDCB7884794F08DD370020FF4B8931EC76E79D4075DDAFEA66BBE9CBCD3CC80338A8D42AACD0C12A13444D0EED6E293237C616CDA4823BF4CB437D8527352EEEAACA85FB21E68526DD0951D22C4D4D0DC7F79394EA1DB8BEDB015B66EA974B3925AC80B2EFE3664C1BFB9DFFB3CF459B4135BD0A26731D816967C4B2E45AA576C56A69388BEE64B1D70C9FCE76C52E99296A354A4D8DF0F9796DF1738530DF716F5E035D38B9F3739757F01FE0EA2A3C0BA8F936290C2290F9C0C5AE0E07A91FAF0DA2BFD6305750E852A5AA53781492CC6E788675D31ACF365B9CF9FADC92B2DFEBCF828B9621675C20880C7136F06F802808BAD56FAC7918E5ADB93B19D62AB8AEC166CBF73C46E273BB4C35E4AED545C9E2DC6D4AE4D46959700049E3BB83BE48858A78C21E264A71EE9AB90C0CEAC5C6FCC2E0AA95F6D80955B37A9378F1D2A96F9CA718EDB10F3037C2454C54926082475D039D86892EDE7414BC340F48DB68904113CD58805393901EB94026C92C0C7A64E55BF9AD0E2ABE9A503FFD3E1F6F242C401E55EC5377ABF83D78B2EE39D0A0DFF279314C988D6950E75DD6BD1F0B58AC7737CE42CE62BD513C8F08E3D2D2AD3DD9C4C469A79C5C744678E35DD1BF9F304B2001E4F9332925417842775702A4FA0A745599D84F1DA79298743CCA4287EA82D07EFED52932DC8B1FEF598306EB10247840CBC5556FF5827A293481020A764553359BBC186138EF3F72EDFC1B776162407D1E63533D8F739FA60EB772A4A4EA7289ECE86F4445171D1E5F002AE14E6EAADCA40F9E4DEB35EF835447331DDAFD01D015E1F287AA782461830A3F7CC513678F26217AEF3EE7957AA1508D600E4CC5052BDBB43A0A1F6A4B3076CDFD80F2466CB748FECBC3CC1E2B1DF790A8F8327E7634DED31AAC5CA2E267A1978661FDE9D8C017F8ED2C5CE988C6E3830939BB80E20EC3E6EB963407115BA91BBF77CFB7D889E053FCD240BC1A79FD270F5BD9063DF8E63AF8BEDC24F858BC45620A64E31DA2CEA313A6649ED19B148AA6249A11A3D6B200DD2C6F4C750F7D72
F95B9DF88A027D53263495E847F9D4EC95F6B82B63227F8CFF665BF71A097D11214EA6B7C77BE4C9922B05941ECEB9CAC7C520D615DE8ECFBE0957EB34D9EB068C06DE6648644A9E619D26E2798DA6F05757506D190248F9A5B84185090B0CFFA1F196002FB3ECA73E3021BF1D0BC948922E9181794BAD12F085F250442E5BA4AF365B6824C600056DEB3C744BFBB918C32E3F90B2CACA9CFED542FD7E1300CD29AA47B3AE86A452AC059CAE2875868EE73B6D81B41EAF859FFC5A59519DAE2FB8A2073C5A1FF096806CC51152F0774A75ECD9DAB317CAF99247FED839E2A9D0CDE91944F5711C21799D36003D79E08A211DB4A162FCB4F3BF0A2BF910838AF20FED16FB0FCEB59A08B633861699636E6C11EEDEEA777C37B594AB6F3785B8F058336609E18A00EEE38898F8ED8D01A261FDF5D147230EED2EBCBC76B742AFAB2CDADE6863745F3B00EA35267FE925E0501041B8060499A3393DB9764E72D3EAEB267A1430C42B5C79C5EAFD5ABD4E4ED0D5D5802C864DAE3FDE73420B90C17F71794C23DCD9E8C671699D37784191E1DE920A7A6C93C6C2A01DAB07A97A373B6CB0A4002DABD292F6E1AA60292363903EEA1AB0D91B6FDE86F05A226C8361134029372358F513F0EFDA35E25ECB1AA8CF37E37B48BA718994E1D016D92DD783AEF9291676188E0B766010292608E3FCC554B13CCF8DF091ED07B78B5652CE2F3B18B41C30CFC45361CD507C901DF169FA7A63DED5546201FFB0EA3ACE1C89AA503FBA480F38A0C51D249D72C4ED689D072E5D6853B325643B59630494C536EF822C4D68B1283D2E7A1A3D5125F2167837A3159F5731EA474DD96617ECB5E69D82D102F272A349038A076823CD8AB50B1CA452C9C803E717C2D8E683F5D7156A81173CF52CFA444687FA35EA5A7F87F2FB4F32B8AB7FC3D70623E04C43EBD1E30E293EF47B46DFB85A9AF3D09DB3E068D7BD7073F519AECE4C3F5F4F845A818339722DAB8301A2FD14D9DC653E9222A70EE11722BB5C5FAFD0F1145EFFE6A82CDD15E36C9FA59CE296A7DB780038776D292DE947CB51944167674A366A7509669C54EA539BD6FBE27A39553571D4AF5D09698A5513F5B16524093ED271D29DA62F5E38053A6835AF3BA821AEBA9D975929600876AB9A6DC5CD41E60C9AFF57298DECDA4A0C74915AEAC93527D89A9543BAD20DF4FB0E7FF6F3866466966CAA5007C38F062B6607F80C7C5D969F7551E0DDC7D5F46F201408E1F5D7A04A1B8DE33D640FAC5A8F6854CAF5AAE598812A0B736A563765EDC03FAA637AED6AB5BE58D259DA106D93687DDF2B42527023A967FF27AB841BF4C148C8D501FB157C800F653F18553297E49DF3D55004B253EDF333DBEB9E27D57DE70DC7B2945062B804296D53E74B20C0CD01B72286709C223AF3B3A99245D21424B6E780AF6C281D90
FDA29EF794FCA631415FBA17930D1A6EC4257B766CB14C04DC368C46C6F2A140573CDF2937E92CBE9EEEB41E0FD1B63ECABDFACCE9CB4BB8AD481BD5170C47D69B0329414114E3A4B6E40DF4B5B61C0BC2A97BF23BD2429532BC2FA10767B474BAAE3150F986887D5579ADCF5EA89DA042101A0879855B4F832702649ED023015CCD08C1A18EEA17C84CB72BF8095F6916C86FB1A573F93170F30F199337F18AE442A113284084871955CE
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/STKaitiSC-Bold cguidfix
/F2.1/STKaitiSC-Bold renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs3 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 sc
q
0 0 351 309 rc
0 309 m
351 309 l
351 0 l
0 0 l
h
f
/Cs2 SC
1 1 1 sc
-917 979 m
1591 979 l
1591 -953 l
-917 -953 l
h
-917 979 m
f
49.17765 300.33517 m
58.9408 290.57208 58.9408 274.74298 49.17765 264.97986 c
39.414551 255.21672 23.585449 255.21672 13.82235 264.97986 c
4.0591998 274.74298 4.0591998 290.57208 13.82235 300.33517 c
23.585449 310.09833 39.414551 310.09833 49.17765 300.33517 c
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -81 335 cm
130.17764 34.664829 m
139.9408 44.427929 139.9408 60.25703 130.17764 70.020126 c
120.41455 79.783279 104.58545 79.783279 94.82235 70.020126 c
85.059196 60.25703 85.059196 44.427929 94.82235 34.664829 c
104.58545 24.90168 120.41455 24.90168 130.17764 34.664829 c
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 31.5 282.65753 cm
/F1.1[ 16 0 0 -16 0 0]sf
-8.8959999 5.776001 m
(!!)[ 8.896000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
49.17765 110.17765 m
58.9408 100.41455 58.9408 84.585449 49.17765 74.82235 c
39.414551 65.059196 23.585449 65.059196 13.82235 74.82235 c
4.0591998 84.585449 4.0591998 100.41455 13.82235 110.17765 c
23.585449 119.9408 39.414551 119.9408 49.17765 110.17765 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -81 335 cm
130.17764 224.82236 m
139.9408 234.58545 139.9408 250.41455 130.17764 260.17764 c
120.41455 269.9408 104.58545 269.9408 94.82235 260.17764 c
85.059196 250.41455 85.059196 234.58545 94.82235 224.82236 c
104.58545 215.0592 120.41455 215.0592 130.17764 224.82236 c
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 31.5 92.5 cm
-8.8959999 5.776001 m
(!")[ 8.896000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
262.17764 110.17765 m
271.9408 100.41455 271.9408 84.585449 262.17764 74.82235 c
252.41455 65.059196 236.58545 65.059196 226.82236 74.82235 c
217.0592 84.585449 217.0592 100.41455 226.82236 110.17765 c
236.58545 119.9408 252.41455 119.9408 262.17764 110.17765 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -81 335 cm
343.17764 224.82236 m
352.9408 234.58545 352.9408 250.41455 343.17764 260.17764 c
333.41455 269.9408 317.58545 269.9408 307.82236 260.17764 c
298.0592 250.41455 298.0592 234.58545 307.82236 224.82236 c
317.58545 215.0592 333.41455 215.0592 343.17764 224.82236 c
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 244.5 92.5 cm
-8.8959999 5.776001 m
("")[ 8.896000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
262.17764 300.33517 m
271.9408 290.57208 271.9408 274.74298 262.17764 264.97986 c
252.41455 255.21672 236.58545 255.21672 226.82236 264.97986 c
217.0592 274.74298 217.0592 290.57208 226.82236 300.33517 c
236.58545 310.09833 252.41455 310.09833 262.17764 300.33517 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -81 335 cm
343.17764 34.664829 m
352.9408 44.427929 352.9408 60.25703 343.17764 70.020126 c
333.41455 79.783279 317.58545 79.783279 307.82236 70.020126 c
298.0592 60.25703 298.0592 44.427929 307.82236 34.664829 c
317.58545 24.90168 333.41455 24.90168 343.17764 34.664829 c
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 244.5 282.65753 cm
-8.8959999 5.776001 m
("!)[ 8.896000 0.000000 ] xS
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 -81 335 cm
290.59998 52.34248 m
137.50002 52.34248 l
S
0 i
CM
217.59999 282.65753 m
209.59999 285.65753 l
209.59999 279.65753 l
h
217.59999 282.65753 m
f
0 J
0 j
1 0 0 -1 -81 335 cm
298.59998 52.34248 m
290.59998 49.34248 l
290.59998 55.34248 l
h
298.59998 52.34248 m
S
1 J
1 j
0.60000002 i
290.59998 242.5 m
137.50002 242.5 l
S
0 i
CM
217.59999 92.5 m
209.59999 95.5 l
209.59999 89.5 l
h
217.59999 92.5 m
f
0 J
0 j
1 0 0 -1 -81 335 cm
298.59998 242.5 m
290.59998 239.5 l
290.59998 245.5 l
h
298.59998 242.5 m
S
1 J
1 j
0.60000002 i
112.5 207.59999 m
112.5 77.342491 l
S
0 i
CM
31.5 119.40001 m
34.5 127.40001 l
28.5 127.40001 l
h
31.5 119.40001 m
f
0 J
0 j
1 0 0 -1 -81 335 cm
112.5 215.59999 m
115.5 207.59999 l
109.5 207.59999 l
h
112.5 215.59999 m
S
1 J
1 j
0.60000002 i
341.65985 211.58463 m
349.42392 193.28403 357.06641 168.53769 357.06641 142.02998 c
357.06641 112.84032 347.79922 88.951988 339.30731 73.189583 c
S
0 i
CM
257.37485 116.11945 m
263.39481 122.18246 l
257.9238 124.64579 l
h
257.37485 116.11945 m
f
0 J
0 j
1 0 0 -1 -81 335 cm
338.37485 218.88055 m
344.39481 212.81755 l
338.9238 210.3542 l
h
338.37485 218.88055 m
S
1 J
1 j
0.60000002 i
294.91315 225.69765 m
270.34799 211.18234 234.39244 187.70415 200 157 c
163.69763 124.59077 139.40636 93.298981 125.81289 73.509415 c
S
0 i
CM
220.82857 105.2897 m
215.4147 111.89954 l
212.40343 106.70992 l
h
220.82857 105.2897 m
f
0 J
0 j
1 0 0 -1 -81 335 cm
301.82855 229.71031 m
296.4147 223.10046 l
293.40341 228.29008 l
h
301.82855 229.71031 m
S
1 J
1 j
0.60000002 i
321.44907 277.1293 m
319.82834 284.01218 317.56302 290.39917 314.39844 294.58594 c
303.88739 308.49222 285.2533 306.34213 288.39844 291.58594 c
289.99982 284.07266 299.58887 271.48502 308.61642 260.93814 c
S
0 i
CM
241.95549 65.72921 m
237.50301 58.437065 l
243.39572 57.307468 l
h
241.95549 65.72921 m
f
0 J
0 j
1 0 0 -1 -81 335 cm
322.95551 269.27078 m
318.50302 276.56293 l
324.39572 277.69254 l
h
322.95551 269.27078 m
S
1 J
1 j
0.60000002 i
357.31525 228.16711 m
368.54965 223.83583 380.1843 220.32838 387.45312 220.82812 c
405.28806 222.05431 406.00476 240.68837 388.45312 246.82812 c
379.61514 249.91975 363.71567 248.80043 350.10715 246.92705 c
S
0 i
CM
268.90829 103.81757 m
277.44897 104.05535 l
275.18671 109.61252 l
h
268.90829 103.81757 m
f
0 J
0 j
1 0 0 -1 -81 335 cm
349.90829 231.18243 m
358.44897 230.94466 l
356.18671 225.38748 l
h
349.90829 231.18243 m
S
1 J
1 j
0.60000002 i
359.72632 249.26698 m
370.44513 252.13971 380.84473 255.91512 386.11328 260.57031 c
399.60236 272.48904 390.28534 289.68973 373.11328 284.57031 c
364.35632 281.95966 352.14868 271.07111 342.28699 261.02628 c
S
0 i
CM
270.95392 87.627533 m
278.0159 82.818336 l
279.4368 88.647667 l
h
270.95392 87.627533 m
f
0 J
0 j
1 0 0 -1 -81 335 cm
351.95392 247.37247 m
359.0159 252.18166 l
360.4368 246.35234 l
h
351.95392 247.37247 m
S
1 J
1 j
0.60000002 i
347.27695 269.75113 m
352.68173 277.75909 357.16876 286.03812 357.93359 292.29297 c
360.03958 309.51593 342.12219 317.39957 332.93359 303.29297 c
328.327 296.22079 326.47095 280.95996 325.76538 267.4986 c
S
0 i
CM
261.61551 71.751488 m
263.83823 63.501671 l
268.71469 66.997398 l
h
261.61551 71.751488 m
f
0 J
0 j
1 0 0 -1 -81 335 cm
342.61551 263.2485 m
344.83823 271.49832 l
349.71469 268.00259 l
h
342.61551 263.2485 m
S
1 J
1 j
0.60000002 i
293.18359 255.62114 m
274.8089 261.44241 249.74049 267 221 267 c
186.19586 267 155.44611 258.84995 135.65167 251.95114 c
S
0 i
CM
219.75487 81.948624 m
211.21512 82.218246 l
213.14352 76.536583 l
h
219.75487 81.948624 m
f
0 J
0 j
1 0 0 -1 -81 335 cm
300.75488 253.05138 m
292.21512 252.78175 l
294.14352 258.46341 l
h
300.75488 253.05138 m
S
1 J
1 j
0.60000002 i
298.09271 264.07779 m
277.44763 277.79968 247.10658 293 214 293 c
177.50266 293 148.02443 274.52661 130.42577 259.92606 c
S
0 i
CM
223.65942 75.498322 m
215.38072 73.38575 l
218.81113 68.463127 l
h
223.65942 75.498322 m
f
0 J
0 j
1 0 0 -1 -81 335 cm
304.65942 259.50168 m
296.38071 261.61426 l
299.81113 266.53687 l
h
304.65942 259.50168 m
S
1 J
1 j
0.60000002 i
355.29965 224.36169 m
378.5687 207.75253 406.98047 180.95911 406.98047 149.14717 c
406.98047 113.28726 370.87805 82.274864 346.73587 65.545387 c
S
0 i
CM
267.69397 106.1282 m
275.99249 108.16155 l
272.60928 113.11674 l
h
267.69397 106.1282 m
f
0 J
0 j
1 0 0 -1 -81 335 cm
348.69397 228.87181 m
356.99249 226.83844 l
353.60928 221.88326 l
h
348.69397 228.87181 m
S
1 J
1 j
0.60000002 i
350.51981 218.20351 m
366.21701 200.06081 383.5 173.40785 383.5 144 c
383.5 111.01514 361.7569 84.061241 344.89621 68.118484 c
S
0 i
CM
264.13721 110.87524 m
271.73828 114.77698 l
267.29852 118.81287 l
h
264.13721 110.87524 m
f
0 J
0 j
1 0 0 -1 -81 335 cm
345.13721 224.12477 m
352.73828 220.22302 l
348.29852 216.18712 l
h
345.13721 224.12477 m
S
1 J
1 j
0.60000002 i
358.3132 40.46796 m
368.37869 37.585514 378.50183 35.610451 385 36.725685 c
402.13995 39.667301 402.85666 58.301373 386 62.725685 c
377.5957 64.931541 362.53281 62.356796 349.5401 59.220104 c
S
0 i
CM
269.67337 292.14755 m
278.20386 291.6673 l
276.41623 297.39481 l
h
269.67337 292.14755 m
f
0 J
0 j
1 0 0 -1 -81 335 cm
350.67337 42.852444 m
359.20386 43.332699 l
357.41623 37.605186 l
h
350.67337 42.852444 m
S
1 J
1 j
0.60000002 i
117.2336 277.05267 m
117.57242 285.20184 117.08396 292.93961 114.86475 297.85547 c
108.16876 312.68805 89.534691 310.53796 88.864746 294.85547 c
88.54203 287.30109 94.014633 274.87598 99.774124 264.02563 c
S
0 i
CM
35.626801 65.92289 m
33.242348 57.718357 l
39.225056 58.173534 l
h
35.626801 65.92289 m
f
0 J
0 j
1 0 0 -1 -81 335 cm
116.6268 269.07712 m
114.24235 277.28165 l
120.22506 276.82648 l
h
116.6268 269.07712 m
S
1 J
1 j
0.60000002 i
304.70929 214.46576 m
288.1485 193.58858 262.245 163.67973 229 134 c
191.79921 100.78868 156.19002 77.491875 134.34808 64.507248 c
S
0 i
CM
228.63176 114.22437 m
226.07639 122.37729 l
221.34566 118.68673 l
h
228.63176 114.22437 m
f
0 J
0 j
1 0 0 -1 -81 335 cm
309.63177 220.77563 m
307.07639 212.62271 l
302.34564 216.31326 l
h
309.63177 220.77563 m
S
/Cs1 SC
0 sc
1 0 0 -1 154.5 274.15753 cm
/F2.1[ 16 0 0 -16 0 0]sf
-9.2729998 6 m
(!")[ 8.176000 0.000000 ] xS
/Cs3 SC
0 0 0 sc
/F2.1[ 10 0 0 -10 0 0]sf
4.5830002 7.5 m
(#)s
/Cs1 SC
0 sc
1 0 0 -1 145 101 cm
/F2.1[ 16 0 0 -16 0 0]sf
-11.618 6 m
(!")[ 8.176000 0.000000 ] xS
/Cs3 SC
0 0 0 sc
/F2.1[ 10 0 0 -10 0 0]sf
2.2379999 7.5 m
($%)[ 4.690000 0.000000 ] xS
/Cs1 SC
0 sc
1 0 0 -1 21 203 cm
/F2.1[ 16 0 0 -16 0 0]sf
-9.2729998 6 m
(!")[ 8.176000 0.000000 ] xS
/Cs3 SC
0 0 0 sc
/F2.1[ 10 0 0 -10 0 0]sf
4.5830002 7.5 m
(&)s
/Cs1 SC
0 sc
1 0 0 -1 334 101 cm
/F2.1[ 16 0 0 -16 0 0]sf
-11.618 6 m
(!")[ 8.176000 0.000000 ] xS
/Cs3 SC
0 0 0 sc
/F2.1[ 10 0 0 -10 0 0]sf
2.2379999 7.5 m
($&)[ 4.690000 0.000000 ] xS
/Cs1 SC
0 sc
1 0 0 -1 288 193 cm
/F2.1[ 16 0 0 -16 0 0]sf
-9.2729998 6 m
(!")[ 8.176000 0.000000 ] xS
/Cs3 SC
0 0 0 sc
/F2.1[ 10 0 0 -10 0 0]sf
4.5830002 7.5 m
(')s
/Cs1 SC
0 sc
1 0 0 -1 261.5 182.5 cm
/F2.1[ 16 0 0 -16 0 0]sf
-11.618 6 m
(!")[ 8.176000 0.000000 ] xS
/Cs3 SC
0 0 0 sc
/F2.1[ 10 0 0 -10 0 0]sf
2.2379999 7.5 m
($$)[ 4.690000 0.000000 ] xS
/Cs1 SC
0 sc
1 0 0 -1 157 211.5 cm
/F2.1[ 16 0 0 -16 0 0]sf
-9.2729998 6 m
(!")[ 8.176000 0.000000 ] xS
/Cs3 SC
0 0 0 sc
/F2.1[ 10 0 0 -10 0 0]sf
4.5830002 7.5 m
(%)s
/Cs1 SC
0 sc
1 0 0 -1 108 171.5 cm
/F2.1[ 16 0 0 -16 0 0]sf
-9.2729998 6 m
(!")[ 8.176000 0.000000 ] xS
/Cs3 SC
0 0 0 sc
/F2.1[ 10 0 0 -10 0 0]sf
4.5830002 7.5 m
($)s
/Cs1 SC
0 sc
1 0 0 -1 312.5 203 cm
/F2.1[ 16 0 0 -16 0 0]sf
-9.2729998 6 m
(!")[ 8.176000 0.000000 ] xS
/Cs3 SC
0 0 0 sc
/F2.1[ 10 0 0 -10 0 0]sf
4.5830002 7.5 m
(\()s
/Cs1 SC
0 sc
1 0 0 -1 274.25 17 cm
/F2.1[ 16 0 0 -16 0 0]sf
-11.618 6 m
(!")[ 8.176000 0.000000 ] xS
/Cs3 SC
0 0 0 sc
/F2.1[ 10 0 0 -10 0 0]sf
2.2379999 7.5 m
($\()[ 4.690000 0.000000 ] xS
/Cs1 SC
0 sc
1 0 0 -1 133.5 77.5 cm
/F2.1[ 16 0 0 -16 0 0]sf
-9.2729998 6 m
(!")[ 8.176000 0.000000 ] xS
/Cs3 SC
0 0 0 sc
/F2.1[ 10 0 0 -10 0 0]sf
4.5830002 7.5 m
(\))s
/Cs1 SC
0 sc
1 0 0 -1 114.5 55.5 cm
/F2.1[ 16 0 0 -16 0 0]sf
-9.2729998 6 m
(!")[ 8.176000 0.000000 ] xS
/Cs3 SC
0 0 0 sc
/F2.1[ 10 0 0 -10 0 0]sf
4.5830002 7.5 m
(*)s
/Cs1 SC
0 sc
1 0 0 -1 331.5 291.15753 cm
/F2.1[ 16 0 0 -16 0 0]sf
-9.2729998 6 m
(!")[ 8.176000 0.000000 ] xS
/Cs3 SC
0 0 0 sc
/F2.1[ 10 0 0 -10 0 0]sf
4.5830002 7.5 m
(+)s
/Cs1 SC
0 sc
1 0 0 -1 14.5 17 cm
/F2.1[ 16 0 0 -16 0 0]sf
-9.2729998 6 m
(!")[ 8.176000 0.000000 ] xS
/Cs3 SC
0 0 0 sc
/F2.1[ 10 0 0 -10 0 0]sf
4.5830002 7.5 m
(\))s
/Cs1 SC
0 sc
1 0 0 -1 324 55.5 cm
/F2.1[ 16 0 0 -16 0 0]sf
-11.618 6 m
(!")[ 8.176000 0.000000 ] xS
/Cs3 SC
0 0 0 sc
/F2.1[ 10 0 0 -10 0 0]sf
2.2379999 7.5 m
($#)[ 4.690000 0.000000 ] xS
/Cs1 SC
0 sc
1 0 0 -1 210 24 cm
/F2.1[ 16 0 0 -16 0 0]sf
-11.618 6 m
(!")[ 8.176000 0.000000 ] xS
/Cs3 SC
0 0 0 sc
/F2.1[ 10 0 0 -10 0 0]sf
2.2379999 7.5 m
($*)[ 4.690000 0.000000 ] xS
ep
end
%%Trailer
%%EOF
