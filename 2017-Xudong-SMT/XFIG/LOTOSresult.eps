%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 440.000000 286.000000
%APL_DSC_Encoding: UTF8
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 440 286
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 440 286
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /zero put
dup 34 /two put
dup 35 /one put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<



00>] def
/CharStrings 5 dict dup begin
/.notdef 0 def
/zero 1 def
/one 2 def
/two 3 def
/uni2B91 4 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-951 -481 1987 1077}def
/UniqueID 4243299 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C959DCA2B25064CB2EE653C8C5E0D08068DD956094993D87692D1893E7882B3267FBEDEB677400A54C3FF791059355FC781EA890EE12CE6212CB47D9946BF6264598FD8C1A7061938A62AD04499F65CEA594E4721E9FB17ECC1A6882F68F8E80EF6960BCEFB052A8562A9D8A0736E67CC64174DF9ECC181D2F62BCD45A29264E0440AEB31060492BB625E1A9F69F5021F8ED0581B558FA0CDEF0FB1659FC0436DFA19469CF2BA7EBBD467956A246B54F4EBDD658CC8859F6DB252F322DA092CF6B52FCB690121BE62B5AAF07CBBC0BDC48F22B7267B01A3CD83390A754A6E7345E47E9AE851A4A44D1AEEC532FA965F75410E26CD6195CE1B0DF721EE1676E8930116ABD739622318F80E5C2DB79FBA1703DA863E06A991F254E33A7C88E107E48CF250FA7B6F69788E14D51E8E7075AB31F6457DD4F18320610E36F27B73A9C60C3AB0C3A3182280B4CA033F0B68E97D3B15E9B88476FFA400A5CFE1C629AAD304D675F7032D7812F7F6DDA99FF33DC76C98D43EBF085C5935642430971EED0C6788CD000FE6D0AA0BF075D4A0A47B67D4FD9F043FEFB29C50709C467A7883CA81DDCC45CE524364ABCAC75BEBF0D6B47BA13845617644DB1FA467A1058DBF05ACEA5A8B86037876A8FE73FE73F9D8E3D468AC9B6356016B301135AB2338C60BEDC6D67EBD71599E4164F462F4179420B6565741BB77924ED1428B3249B35B4431C3F56F88073C43C9C1D28B2A54168468063D1437643BD57DD5AECD985D7EBCB6
CDEDCC4289CE8D0BE94A515877D40A7F72486AB93FD4A0BC44952915C958B90188F4E6CA28DED6582D19ADE6034F2D809BA8F8D03D9124066D8FB212380B40273A83694292B399EA23564A139813928512C10AB80AC464E422C2935CE39D8C7BC2991C069477B162E9D5372C7D7C2CD4C0AE5635B2F8A33BBAE27E49FAD785274E2FFA9226D1048B9C28C4F371FACF8ECFCF4A40582DACA45DFA427719D5788B728319E8AD3AC0F3FD928B180D5F88BD474EAE8EDC25981B0875F9C87444F25742628D35B2DFB73B4F09BBD3258A39635DA29CBA9DF8CEFDA805A63830058ED99D56B3A086E28BB1B068B000E54F0480307F8270DADEB7FE755306160B268C0B3C69AF47B73C5F673BBBD4D31B65B533F77CA47A3AC93A6801D691AFBB13106CE15F45417110C1E63D2B5F32740E1B5868F062B0AC2545292B95D282961C1665070EE1898352EC87F9D32C74B5A039CA60C6A9D48BFB044485C2C9FBAF7A114A2D5350F9D578E6B683102356FAF5C5DCADEF8D84E3D144C5F1D92AF2B0E00FF14E447BCB4B5FD3438A98FFA3597EEBB224D41848E599B74B5738
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
%RBIBeginFontSubset: STKaitiSC-Bold
%!FontType1-1.0: STKaitiSC-Bold 1.0000.1.0000
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
14 dict begin/FontName /STKaitiSC-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /gid82 put
dup 34 /gid87 put
dup 35 /gid22 put
dup 36 /gid25 put
dup 37 /gid26 put
dup 38 /gid20 put
dup 39 /gid23 put
dup 40 /gid24 put
dup 41 /gid21 put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -84 1 index div -236 2 index div 1044 3 index div 938 5 -1 roll div]cvx def
/sfnts [<


00>] def
/CharStrings 11 dict dup begin
/.notdef 0 def
/gid20 1 def
/gid21 2 def
/gid22 3 def
/gid23 4 def
/gid24 5 def
/gid25 6 def
/gid26 7 def
/gid82 8 def
/gid87 9 def
/gid46456 10 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-84 -236 1044 938}def
/UniqueID 4371360 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C91B5BF8E443649147905228038171EB73F3E0B647FF27DF9EB6CBB52D7BA427F252DF81FEB9E701DE302D3ECCB7E4EB3611831861C54A94AB906E0BBBECBCF200D6FEC9BD3A7336C1732C8CA64F14574D586A7AD1F4EA3869922532F30B61132DC159005EFD82B1FC64271D8CFA6F24FB7FFC77BEF7C08E309F697B044766818AB9DAAA5137FEB1625B1CB6AD3BEEFC1E14B15F0FCC04950C5A0C2005CEC691ED1644A6234FD7F3409DD945869B28FEB2F06BAC79EE9783E1704192C9B02CBA561169F4184284D6A7571C6A5E04622FFEC4139A91225C37CD9B409F2C66011441CEF34F39D868C07EC800E90D1379431B736B96B7AC0EB9DF878E49CDA726E7223D647AC5DF93E55B0DD7DD009005B744553320C79BBE1BFB19F645F8C0BC83CAE8BBA01D42B10CD0D41E3439898FA160855AFE439F5A5D949E966EFD818BA05C3E466C6595D59F0726BD447704FC5192B2A8ADE881FAAD1D631124946A0D06A7F178E0806163D939E53BD2B8B4989B0964240B46DE2FD960C7A7155CFF07EBFBBF741D1D6FC76FB18DFBE8744501A7996257349EA26A9B4722AC5F814A6409DBF090CEA22CBF6D2B11F39869A30B9071D6F9DE1215D53EA0B141BAAC87EBC5F6E8F69EE1803807682168CFE0C343B7010D094FBCA43453352BDCED7099D656E8127C6427C8F57688413105D4684737291067EDDA478E2D90E60E82B29B4D4308CC36B12F59D1AE89E60908463E73F4FA9ADE1DB285B3D57FA4249680B58B5BE3E
41FA406C0FFEDC1C248A67EE710FC12AF900525A840562BAF93B3DF5F5547DF23F8F758C888854C3E573E455DC5C60263A0A15E2D38C40AA3A37FEF2C4448A2CCFB17E80F72A644E3293001B29959DB94A081AB9DD5ED3D922C83D78C2AAD62887D30B4D64201D969F7135E4A45A9FD2306E52FBBE5A33077EE940ADD3896693743FC317052DB9A72DE8F6EAC2D754BAF93AA93B088E4E211F4C535CB713DA13287B68F1E1FB67A95635178E9D8B55506E1E908DB09161A8079C08B09C23B0BD67D7B62B5992BBF986DF60830B61539D5B49A5D36DC04DC612A685D47A5E78692BC130FA80290D4220DED7F7EE9E0E63DA1EA212ED060A5148557095F1EDB01925B04FA763C3D95A076403B5FB83742276BE0551E84AE38013CF23E1B1EB2E0CF5E199BD9D93BA4A68B4C0FC1C2A67EC1BB05313318FD6B2E689B79BEC56A76B90889166CD531FD8A0E221F55DA8D1BDED4F4D9F962676ACE82AD328BFB3A0792E39CFF5AA30471A2965AB3BB3D1DEA4B7B0B3549E8322718E55EB54C5E0F6549703C9566A4941831259FF4BB0B96159DCE49D874355E4B399F3814D6D077B74C3D85AB582C6D52FE44D830B9E43A8583B7F96F78B137204D40B9B89E13D601B43FC83BF1F0DDF08D700C66595470EA03483A496E620509BEB646CA86EBD6F3F3F3FE6E600DE6E91FD0DDD3773AA4B8E168FA86628D8697C0CCF04E51B6472E94A0B80D977BF233D7E4DCA9E616E0F9617D07EADEB34320DB0D83632B6762E372020993E934779B76FF8D66372386D0410FEF187AE5110B3719EC04C14EF8774E06C44831A502C6ECB336732F9C76FF7DDEE83BB24560A71FDE92CA5016A4EC8C195516882C53C01BA2F477962EF6753B2C07A3436429A82F033C69D64FFE23F3C65827A3AA3B3231F313C4963BDB7B7CA760D1E1664C1CD4DE8BC8BE4F1EF667AF1D3B05AAD33BC599B077352670ADF5A59F4DAD2CC297C879BED29637CEFC05B8F1315A5CCA0A769B6BDFCF9E24EAFDEA2A93DE71108A96C1ABA69B9B0A4C3BC14727BAE2B3C0E536B2DEC27421C8618F1555C17FB6C8A171A40C20D59BF681A1664C2078BCF9C64050DF0E77DFE1B7AC509046EF881D301785091F9D1D30FF407E95AE274475BE1258B657E26091B5FC2D83634B322C6CADEF90E302507E8DCC6CDEC9E77DDAA2D99BED0A011F8ED281DC302FC036043722D36D9D8A625FB004492F859E5C3C187C285EC1BB689C02FB560B550333A685B2A200B704340FD9D4A058F4C84E0EF71D930C209C8002DBFC229A27620B1176961143AA00A01C4917D4EF51091CC4092B9355119A07D418091A3114038E4384BED0EADEDD9B3279FCD3B2052E5528C6F09CF551A94F3E8F6049C97D03FCDD7E070D9E75D5A6122E899B4B3FFD44AE27DF7CD100271CB171EC18181330F74E99F3ED1C9A6F25D5E
CE7B8BC09446DF346B1C51C150BFBE3F20DCEB060DA75CD8938EA292F145FA92FC06B9632807FDF8F4B153EC16C5BF0321B79FFBC387CD0AC8BDBB9F64E9027DE39E8B191F26FA8064D07419CA56DA5BD7F81EF1AE43DE5E8DA29FF34D4C80EFA3085A451BB835A9D6AEB893C287676990F1FD944A0287DBC7328DDA2CF7CE059C0E3EC4B94CCB83F78A83C3D81EA98EAD64E498F17B7763A6EB455B7D02ED72657500C1FB8F1FFBD33A97769859B3BB996E5E8E3CD4F0821D36597A721388FDC6E2955561AB74F77C0D00E51A8BA28FEA886733720256C89C916CA56318B49FBC7AEFBE81B1C1639618E28F812E707841C2218296CB78B3FE37EFD4F3E81D16D2434B6DCFB94ECDA579B20B5CAFD5E1E6D5A7CEC880A5713F1902C64EEAA4F433345BE19AE7D8F53C8027658B2A9CD98FB49DF33A09643079326A3B34DC282F67E06A4FD70C694E8A693336C61BB04538C00CEF62DC4F20696287248CF18E6C388E509844043E3A2F63DE9E08654BF8643FF6AACC50DA8F2F4CA72AA76E4D7C1D806E74704AA5BC834E4999BBF44386952004DBE63C79DADD17528EBA5B054275D97FE5B259E4725691685DC6C3BFEF5E9E307CFA7ECADA9E253D005D6D3222398206FC967404204A9E3BDB5A79457241D6384BD6DA5ADAD3A62593EB4F834717E76F0AF6FB2AFC907527ADCA93F529E8F00DAA0764204001F167DA79DCEDFDE044199ACB05AD95B896D7DC845CC016956C918D41AC74BC06F0B63B9DFBA335A7B9842334EB440B3CD25CA948BEF7
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/STKaitiSC-Bold cguidfix
/F2.1/STKaitiSC-Bold renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs3 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 sc
q
0 0 440 286 rc
0 286 m
440 286 l
440 0 l
0 0 l
h
f
/Cs2 SC
1 1 1 sc
-870 1033 m
1638 1033 l
1638 -1130 l
-870 -1130 l
h
-870 1033 m
f
96.17765 277.33517 m
105.9408 267.57208 105.9408 251.74297 96.17765 241.97987 c
86.414551 232.21672 70.585449 232.21672 60.82235 241.97987 c
51.0592 251.74297 51.0592 267.57208 60.82235 277.33517 c
70.585449 287.09833 86.414551 287.09833 96.17765 277.33517 c
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -34 312 cm
130.17764 34.664829 m
139.9408 44.427929 139.9408 60.25703 130.17764 70.020126 c
120.41455 79.783279 104.58545 79.783279 94.82235 70.020126 c
85.059196 60.25703 85.059196 44.427929 94.82235 34.664829 c
104.58545 24.90168 120.41455 24.90168 130.17764 34.664829 c
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 78.5 259.65753 cm
/F1.1[ 16 0 0 -16 0 0]sf
-13.344 5.776001 m
(!!!)[ 8.896000 8.896000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
96.17765 105.17765 m
105.9408 95.414551 105.9408 79.585449 96.17765 69.82235 c
86.414551 60.0592 70.585449 60.0592 60.82235 69.82235 c
51.0592 79.585449 51.0592 95.414551 60.82235 105.17765 c
70.585449 114.9408 86.414551 114.9408 96.17765 105.17765 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -34 312 cm
130.17764 206.82236 m
139.9408 216.58545 139.9408 232.41455 130.17764 242.17764 c
120.41455 251.9408 104.58545 251.9408 94.82235 242.17764 c
85.059196 232.41455 85.059196 216.58545 94.82235 206.82236 c
104.58545 197.0592 120.41455 197.0592 130.17764 206.82236 c
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 78.5 87.5 cm
-13.344 5.776001 m
(!"!)[ 8.896000 8.896000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
385.67764 119.17765 m
395.4408 109.41455 395.4408 93.585449 385.67764 83.82235 c
375.91455 74.059196 360.08545 74.059196 350.32236 83.82235 c
340.5592 93.585449 340.5592 109.41455 350.32236 119.17765 c
360.08545 128.9408 375.91455 128.9408 385.67764 119.17765 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -34 312 cm
419.67764 192.82236 m
429.4408 202.58545 429.4408 218.41455 419.67764 228.17764 c
409.91455 237.9408 394.08545 237.9408 384.32236 228.17764 c
374.5592 218.41455 374.5592 202.58545 384.32236 192.82236 c
394.08545 183.0592 409.91455 183.0592 419.67764 192.82236 c
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 368 101.5 cm
-13.344 5.776001 m
(###)[ 8.896000 8.896000 0.000000 ] xS
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 -34 312 cm
85.09774 246.07149 m
77.627319 250.81839 70.099289 254.38293 64.640625 254.09375 c
49.09869 253.2704 44.081825 229.97781 57.640625 221.59375 c
64.014755 217.65231 76.519905 218.05899 87.982872 219.59666 c
S
0 i
CM
57.687523 70.465881 m
49.397068 68.399887 l
52.799747 63.458054 l
h
57.687523 70.465881 m
f
0 J
0 j
1 0 0 -1 -34 312 cm
91.687523 241.53412 m
83.397064 243.60011 l
86.799751 248.54195 l
h
91.687523 241.53412 m
S
1 J
1 j
0.60000002 i
373.10779 190.92282 m
345.93304 172.9801 302.15543 145.19695 252.98047 118.33203 c
202.00951 90.485947 160.13535 71.764069 135.73746 61.580406 c
S
0 i
CM
345.76758 116.65136 m
340.76517 123.5778 l
337.44424 118.58064 l
h
345.76758 116.65136 m
f
0 J
0 j
1 0 0 -1 -34 312 cm
379.76758 195.34863 m
374.76517 188.4222 l
371.44424 193.41936 l
h
379.76758 195.34863 m
S
/Cs1 SC
0 sc
1 0 0 -1 168.5 158.5 cm
/F2.1[ 16 0 0 -16 0 0]sf
-9.2729998 6 m
(!")[ 8.176000 0.000000 ] xS
/Cs3 SC
0 0 0 sc
/F2.1[ 10 0 0 -10 0 0]sf
4.5830002 7.5 m
(#)s
/Cs1 SC
0 sc
1 0 0 -1 425.5 142.5 cm
/F2.1[ 16 0 0 -16 0 0]sf
-9.2729998 6 m
(!")[ 8.176000 0.000000 ] xS
/Cs3 SC
0 0 0 sc
/F2.1[ 10 0 0 -10 0 0]sf
4.5830002 7.5 m
($)s
/Cs1 SC
0 sc
1 0 0 -1 303.5 50 cm
/F2.1[ 16 0 0 -16 0 0]sf
-9.2729998 6 m
(!")[ 8.176000 0.000000 ] xS
/Cs3 SC
0 0 0 sc
/F2.1[ 10 0 0 -10 0 0]sf
4.5830002 7.5 m
(%)s
/Cs1 SC
0 sc
1 0 0 -1 68 173.57877 cm
/F2.1[ 16 0 0 -16 0 0]sf
-9.2729998 6 m
(!")[ 8.176000 0.000000 ] xS
/Cs3 SC
0 0 0 sc
/F2.1[ 10 0 0 -10 0 0]sf
4.5830002 7.5 m
(&)s
/Cs1 SC
0 sc
1 0 0 -1 15 106 cm
/F2.1[ 16 0 0 -16 0 0]sf
-9.2729998 6 m
(!")[ 8.176000 0.000000 ] xS
/Cs3 SC
0 0 0 sc
/F2.1[ 10 0 0 -10 0 0]sf
4.5830002 7.5 m
(')s
/Cs1 SC
0 sc
1 0 0 -1 142 55.5 cm
/F2.1[ 16 0 0 -16 0 0]sf
-9.2729998 6 m
(!")[ 8.176000 0.000000 ] xS
/Cs3 SC
0 0 0 sc
/F2.1[ 10 0 0 -10 0 0]sf
4.5830002 7.5 m
(\()s
/Cs1 SC
0 sc
1 0 0 -1 229 200 cm
/F2.1[ 16 0 0 -16 0 0]sf
-9.2729998 6 m
(!")[ 8.176000 0.000000 ] xS
/Cs3 SC
0 0 0 sc
/F2.1[ 10 0 0 -10 0 0]sf
4.5830002 7.5 m
(\))s
/Cs2 SC
1 1 1 sc
CM
262.17764 48.17765 m
271.9408 38.414551 271.9408 22.585449 262.17764 12.82235 c
252.41455 3.0592 236.58545 3.0592 226.82236 12.82235 c
217.0592 22.585449 217.0592 38.414551 226.82236 48.17765 c
236.58545 57.9408 252.41455 57.9408 262.17764 48.17765 c
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -34 312 cm
296.17764 263.82236 m
305.9408 273.58545 305.9408 289.41455 296.17764 299.17764 c
286.41455 308.9408 270.58545 308.9408 260.82236 299.17764 c
251.0592 289.41455 251.0592 273.58545 260.82236 263.82236 c
270.58545 254.0592 286.41455 254.0592 296.17764 263.82236 c
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 244.5 30.5 cm
/F1.1[ 16 0 0 -16 0 0]sf
-13.344 5.776001 m
(#"#)[ 8.896000 8.896000 0.000000 ] xS
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 -34 312 cm
112.5 77.342491 m
112.5 189.59999 l
S
0 i
CM
78.5 114.40001 m
81.5 122.40001 l
75.5 122.40001 l
h
78.5 114.40001 m
f
0 J
0 j
1 0 0 -1 -34 312 cm
112.5 197.59999 m
115.5 189.59999 l
109.5 189.59999 l
h
112.5 197.59999 m
S
1 J
1 j
0.60000002 i
136.15024 232.62086 m
245.48637 270.164 l
S
0 i
CM
219.05275 39.237911 m
212.46066 44.673389 l
210.5121 38.998615 l
h
219.05275 39.237911 m
f
0 J
0 j
1 0 0 -1 -34 312 cm
253.05275 272.76208 m
246.46066 267.3266 l
244.5121 273.00137 l
h
253.05275 272.76208 m
S
1 J
1 j
0.60000002 i
312.00784 271.83307 m
320.37057 270.4281 328.18051 270.25125 332.5 273 c
344.96542 280.93253 337.79846 307.09192 322.5 309.5 c
315.491 310.60327 305.66867 304.81836 297.08206 298.22531 c
S
0 i
CM
270.17841 38.502407 m
278.62738 37.231594 l
277.37967 43.10043 l
h
270.17841 38.502407 m
f
0 J
0 j
1 0 0 -1 -34 312 cm
304.17841 273.49759 m
312.62738 274.7684 l
311.37967 268.89957 l
h
304.17841 273.49759 m
S
1 J
1 j
0.60000002 i
429.92221 189.60146 m
438.63135 184.24088 447.51337 180.17212 453.5 181 c
469.24112 183.1768 472.15271 209.8261 457.5625 218.18359 c
450.58548 222.18013 437.57559 220.59737 425.89807 217.85741 c
S
0 i
CM
389.25089 117.9872 m
397.57864 119.8973 l
394.26926 124.9021 l
h
389.25089 117.9872 m
f
0 J
0 j
1 0 0 -1 -34 312 cm
423.25089 194.0128 m
431.57864 192.10269 l
428.26926 187.0979 l
h
423.25089 194.0128 m
S
1 J
1 j
0.60000002 i
127.16827 72.591553 m
258.02393 253.23347 l
S
0 i
CM
228.7171 52.287773 m
226.45348 60.526463 l
221.59441 57.006592 l
h
228.7171 52.287773 m
f
0 J
0 j
1 0 0 -1 -34 312 cm
262.7171 259.71222 m
260.45346 251.47354 l
255.59441 254.99341 l
h
262.7171 259.71222 m
S
ep
end
%%Trailer
%%EOF
