%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 448.000000 229.000000
%APL_DSC_Encoding: UTF8
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 448 229
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 448 229
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /Q put
dup 34 /P put
dup 35 /zero put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<



00>] def
/CharStrings 5 dict dup begin
/.notdef 0 def
/zero 1 def
/P 2 def
/Q 3 def
/uni2B91 4 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-951 -481 1987 1077}def
/UniqueID 4243299 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C959DCA2B25064CB2EE653C8C5E0D08068DD956094993D87692D1893E7882B3267FBEDEB677400A54C3FF791059355FC781EA890EE12CE6212CB47D9946BF6264598FD8C1A7061938A62AD04499F65CEA594E4721E9FB17ECC1A6882F68F8E80EF6960BCEFB052A8562A9D8A0736E67CC64174DF9ECC181D2F62BCD45A29264E0440AEB31060492BB625E1A9F69F5021F8ED0581B558FA0CDEF0FB1659FC0436DFA19469CF2BA7EBBD467956A246B54F4EBDD658CC8859F6DB252F322DA092CF6B52FCB690121BE62B5AAF07CBBC0BDC48F22B7267B01A3CD83390A754A6E7345E47E9AE851A4A44D1AEEC532FA965F75410E26CD6195CE1B0DF721EE1676E8930116ABD739622318F80E5C2DB79FBA1703DA863E06A991F254E33A7C88E107E48CF250FA7B6F69788E14D51E8E7075AB31F6457DD4F18320610E36F27B73A9C60C3AB0C3A3182280B4CA033F0B68E97D3B15E9B88476FFA400A5CFE1C629AAD304D675F7032D7812F7F6DDA99FF33DC76C98D43EBF085C5935642430971EED0C6788CD000FE6D0AA0BF075D4A0A47B67D4FD9F043FEFB29C50709C467A474A1276173E5FBDED8587DC757D3DDA09A61CDEB23EA2F5E819BBF6C812197AF621C557D10C54AF3CFEB3F2C10E3277DE8B8C2B3CEA4047BC2462818AE6B15345573B4FD8FFB52A1507EED7911A3C597E3370307EC55AE060C995DFF6AB663AEDDE938E7ABE4322D8DFF8B01E63ABC05C5C9562474B625D3B015E3219426346EBA979CF
51BE55371C03311134F7A397F07C3B5923581D8A71D9BCA58DF18BDC0E4B346F043A9C42270FFEBFC2AEB878F6226006240BBF3AC48B931121311342DE31CC0AF1CB03333EA08605EC985A4FE15EF9439449E79B0E625C1A84352FF05807F8695DC43A921F11DE2CA960F2C4BC57851EB6A58A022BFE8C64FFD5E9BC4BE7BCF5A5EAFC5559AB6B02B58CC13CA14AAD041A7434599E845104DA1684319377C41F562447C17227FE142AC6D54A5D2ED19D661AF7E017D3355FBD4E731A6B0F399666CE02588C782E3441FE20062457480C657B81CEA2D428D61C152292E6F38EB3120D7E3B1A45FDAE1C602A588B9EC2EEF0C1F3BCE03A8E5EC87ED49C8B5FDEB523245B4050DC86786DF051A5A77C206E425549CB5A87A05E27D7383BD2A1CB29899B6421123D9A83134DCB45A995B85FF19416109BA7557572D69C5ED607A74918ABA57458D0EA9CAFA50352A3056740BED433BC6CFC79B3834F990153913DBE00FC516CBD974EA18DAC5E08A76627DD746A54A855A9F2A6A74C9A94D8EA99A3EC802E6AB35BBD2405C696B107F7EDC6A6BFB59784B0A7C6C8136757482F9D588A9F634744E6D9A782BB2A7301563A0D17B99A2935E2E499AE
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
%RBIBeginFontSubset: STKaitiSC-Regular
%!FontType1-1.0: STKaitiSC-Regular 1.0000.1.0000
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
14 dict begin/FontName /STKaitiSC-Regular def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /gid51 put
dup 34 /gid49 put
dup 35 /gid21 put
dup 36 /gid31 put
dup 37 /gid3 put
dup 38 /gid69 put
dup 39 /gid20 put
dup 40 /gid15 put
dup 41 /gid66 put
dup 42 /gid79 put
dup 43 /gid33 put
dup 44 /gid20705 put
dup 45 /gid11 put
dup 46 /gid4 put
dup 47 /gid32 put
dup 48 /gid433 put
dup 49 /gid92 put
dup 50 /gid12 put
dup 51 /gid68 put
dup 52 /gid70 put
dup 53 /gid85 put
dup 54 /gid38 put
dup 55 /gid40 put
dup 56 /gid81 put
dup 57 /gid72 put
dup 58 /gid62 put
dup 59 /gid86 put
dup 60 /gid19 put
dup 61 /gid64 put
dup 62 /gid29 put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -85 1 index div -228 2 index div 1029 3 index div 929 5 -1 roll div]cvx def
/sfnts [<




00>] def
/CharStrings 32 dict dup begin
/.notdef 0 def
/gid3 1 def
/gid4 2 def
/gid11 3 def
/gid12 4 def
/gid15 5 def
/gid19 6 def
/gid20 7 def
/gid21 8 def
/gid29 9 def
/gid31 10 def
/gid32 11 def
/gid33 12 def
/gid38 13 def
/gid40 14 def
/gid49 15 def
/gid51 16 def
/gid62 17 def
/gid64 18 def
/gid66 19 def
/gid68 20 def
/gid69 21 def
/gid70 22 def
/gid72 23 def
/gid79 24 def
/gid81 25 def
/gid85 26 def
/gid86 27 def
/gid92 28 def
/gid433 29 def
/gid20705 30 def
/gid46456 31 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-85 -228 1029 929}def
/UniqueID 4412941 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C931313987B77B87D3A530FEA8139219B56B58888BA339BA81F732C1729802DA479E44F8245265AD98757217348C6CF6A5A4A09AFEE60A5992D04395784F33CF532D6F4D449ABFE7F449CA9791C64B2FE6D9489E6B9CF45B6818C339CC28190FCA2C9AB5CCD1D28EFE0A496C6027AA919EB41BF13E771DF9ED92F6D84CB858E40E3E8BDD6148BC4CAE47AA256B5105734369C200F9389B68D12C4F4240C6192DE01BC209AB85E91F2829FA758ECB75522E934E08021EE97A7EDF72FE4BBFAE8F83A0B661541EDFB0D4637CFCAC2CE6DEF4C12C8A5827DE43DB0022B996038DA625381BD33D1CC681539D185618A777ADD370142845639E26320A7847EB90FBE81903F9D1F89764D8D275B356ED135A81E8560AA8A561AD67343D47879EB9B99C2B087C1B71FA333EA58F92F1567A2C49DAAF1360FC3E17E23A5D3BE03927117ADDB994C39D1744CD6AB36242390E53432D18CE4E1E959E1DCB648A8318A8F40B54FE67AF144ED9122A8FA84DD19FE5EC43388CFCAE7A76ADB440B612D4941893479875B7531A58D09C274CB79F8C0C8702A5DBDF167D2CEC8E0EDFE5C019435ED893323B3DD1F5DAEFFB5B703BC1FD18CB0F4534F3B24742E9D3F135A0AD858FCBCF7B57FDFE3F444E5C1236CC1E48D8D2BECB748281AF773ED3871AE380ED79735DC71EAC46CA7C051835DF8FB8DDF8444C3549583F26149835C5A78360660D43C03378F91B9ADA5CA08F601E0EE25F280C8B747D3E2E3FC0ABC78347E621F2E45
D9B28006BC85068511F870A3B538B83C1969F8C12BA68ABE63B973C5EA290801C0A0A50BB82C467D49C4C3F1985FAD6EA2E1C5DE8CFFBB0DDFE7A9EC637354D699C8D220A32D6B7192E5B1A02E025C45D92B3408470F341AA1989C8477E0E330428FFC256851751ED122E422AD989FDE91AFAE4774E8C1DA8B01A9A836DE71E31B6210A64A3B796C2C289043EAEE28768B44C8CB827C4031592C53926C72A8943E03471A854661DA59DC068D43156492145EFDBFD4C6B308976C1B8963E9B2CE906526C0571A1547BB344386FB4FAFAF2D7388D9BF934D98DB1E4ECD57EB700B022EB880B52DB80FDEE075DD4523D663DB2B83F8CA4EE23E35E4462C35EBE91B64AAA2B69E358B0803C5919366D86A995BB7E9A9C34B45F16FB7FC28CCA6DC3C20E4928EFEB7FDF955138AB48CEFB8383E54A44F4799A1111E6E4ED81D86BC69E8EB8C9E87E23DCF3C5931F4F47DEB21B74A0E5F246F91AE6B280F8E260D59E8474135E1BB49BFD908A0A051472641919E633F48AB89E16EC97BD714B640EF0972B846FE9BFE609C002325AF84D150EA13A0608047358AD437DE627A1AC774D1F0362F2E164F42A5A4B96B3AD190EBE8DC96FA7F4876D8A7258F60CDB52BD0E300D541703149959D16B25C30067D6EAF8941CBF5D6B5E7D22D3E23535A2F73087F03740078E47D8C9AD1D029ED67088567A0013915B0C0E510C9DFF2E8D5806994E25043104C8C705F7A98BD669EBAA21A1CC582973ACDCA712E059206AAAC813CCC48F0CA0EB197CC57F983E655D3917ED8FE57C0FFF784DB12A822EDF70499F532EA79B8A89C8DD438926C7A6DF60A53FA908853C1024E712A3ED7298E8F590738F81DC7075B231B6FAE6DADB7C81DC79E89C9E52C7A214D7F8779B5FEDA1DFE81BDA50FABBC5BF4D9409F68960BBCB99B427894B3B0186BC88ECC95FB86B7331DB6DB876C80C2DD1678D33CE56E83A0144D5F29A3D4DB151649636596FA5FC808E497B97A561C513B6853BA451B9996D17955F469B767C01AF923DDDC5368491B3AD43C30D740AA7D1320349BD597E572450357C1DDEE1243D3472C797D7F13316A127FB6663A35F1CDFACE7A307C377BAD0A23CFDF64D311C6FE45EC11DB30B723BAB617859B901B2F0BC765B824832DEF6EA0FDF02CD8C704E50F74B485F77098EF55C74BAC804140FFAC101986CB300F84756B040F6C910739B0D4694E47A1BB6F2EBF9469E0D2F2A26BFA0C4A0A27F51B4B9720580D86213A8A32D96696E6D825B9141F0C0EF677E492D27AFE7FD89DF4BC0A9D70BB112AC67DC44C8E0A64148CF0E7AE28A15B7AA4970FE5FD1F52D682F8A4D815FAA496F5DCCBD7A43849DA92C1843C0492A6AA9F9C459EC0962FA84CEC0ECC97771979EDFD598E526F6236A280E12B5525BBA2C6965A822AD6DFF96A5B464358BF28A35A5B2650CB

65BB2006CA7FAF80C4B44325B20C2384D353A272F6B4F0631197BD88540E44B69E1C5272319FE8245D38F9F5CEF05DE5008F506C9DD154A56CDD4CBC02D958788C8F6C0D0813F490556B70CBDE3D00AB3910BDA9E7BB770342F028E76A730809D9D8CCF932E3E31E91A289561763BCC102023E332AEE152989D8B3847169A9CCBF1B2965DEF8D662735172B0C85CE4A6010136749F0DF22C604B6863E77D00E7F8C971F7F1E48CCE9A8E84DDE85918D8DC8BB2318C3B23613B51C72803E0D5B04CF1AF92C27A204484CE8078B333EAD23CA0F52F2A7D9621AAAFDF8AC6C2EEB4BC3E5FAE5755B03EB97C6EA57BD1BDC9A056D0F707B51DDC6AE22D55FD091D402C5B2F9338E58F04F4903D5A5B29EF865F719EC6E06E6C30CEAB784E40EA062FABB0DDE043D72453C26B63EF49B2D1AC6A55B100405CDF0C6495037B3111D0FFA61295D77E7DBA9F5570DED8B55608C75C3BC79865C19A0277D0D0D984BDD82C0047741B289BB7C1143275FE411B9B13E725914E675A49A28FE9BEB972E0464931B59BCEDD239CD13A1DF9586C8596B5677E279C35288690C4D7694DABCDDBB95A20FCA2ACEC114BCE36AB20F9593D57D1D2CCCDB82DFB003AE342EF4A0E42223BB3775267FFAE775BE164FF101D27B43427561349A393077A0DB47E03B97F3E1D898F3920EAAC65A0C7D205F24FB6CE06E01CEF69F6DECAF3A78848C3020CF19826A27CEB9BDECD7110F2DCDD6D72F6B0BC1EF4172F0B8A6D208D3AEEB7ED9E8C6E802E0198073BD1135CB6B2D7C2DA4626B8404BCE5E0C075560C7547A0AF96A094991317CFB037CE9A7B131BB564DDC564A1C75FF6639269CAAD7B6805EB2C84C9FBBF3F4254106A28F9662D9376CFF4FC9E2F451AAFC3956F6CF0D5EF5A03E2F80E51D819A9D1754E72FC83A4515E874B932126822950A0C29BBE7A4266A57A4B63F717C4507F5ADF29BD016F8627E62C8A6181F1D6D8C8688D5C97025A3A02B2F4F1B14D629FA913F1C0F649C2390D537CC4EAF929F007F1A1D11EAAD22FC09BF75FD7D7CDC00F7B2CAB1EBC6B211A30DD57D11A25B354BF84F4CB9E71975FAE0C1D54A13B8E311E0E9C4240967547949373B156597B77A16F2E71C7897656A8B6B97B218ECB7347A237C442AB38AE9A18CD82F646D9685B21EE055CE8587D80E06FF7E55C073131A15A420D2C8BB35574AF57DAA7D95D5B2731315A573AA368E51BA21D6A7C9D01DF1332D23D4D54919E1886DF9FBB3A2F8D82509F2D9D4E428BE695D0CEDA2CDB3B5F11CF1E3834C1BC579675581DCA8C686F4E4CB60B9A68457B07129BFEDE425C69BF6B9691C23B6563ADD30C88BC59EB0F4D78DDE8F2217B639E11C4500ABD34008D4B722D9171F432A42DD9984155FEC6BD0D773AB79D76CA545477DB67D0922F0B648CF73184D642C59EBAB01D60A7A4BCC509F


0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/STKaitiSC-Regular cguidfix
/F2.1/STKaitiSC-Regular renmfont
%RBIBeginFontSubset: PingFangSC-Ultralight
%!FontType1-1.0: AAAAAD+PingFangHK-Ultralight 001.003%%CreationDate: 3/17/17% Copyright 2017 Apple Inc. and its licensors, all rights reserved.11 dict begin/FontInfo 9 dict dup begin/version (001.003) readonly def/FullName (PingFangHK-Ultralight) readonly def/Weight (SnapShot) readonly def/isFixedPitch false def/UnderlinePosition -150 def/UnderlineThickness 25 defend readonly def/FontName /AAAAAD+PingFangHK-Ultralight def/PaintType 0 def/FontType 1 def/FontMatrix [0.0010 0 0 0.0010 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 1 /cid94 putreadonly def/FontBBox {-92 -232 1112 972} readonly defcurrentdict endcurrentfile eexecD9D66F633B846A989B9974B0179FC6CC4458BB4CB99E3608702C78822367AAF89059868F63F93207640A6BD5DA214789139C491E02A37BF3866F2964E8D690D48D9F6C4A5EC22355F8123573812483E06B968AE84B5F20A982A0E6576475351697AB8C6EA040355C5542F297D7A3AF28AB93EA0771E0D56DBF00F7CA9CE9FB9FC2E0ECB00D04D5F5F3F24B987B546D6274971A477DEE12C44623C180BCDBA21172627610C4736632D1A4693E79719C3BC43DF5330790A52DCD4CF455ACC213F6B1C4BA249179DB360225568161552A16682E3A3604BFC39D571B1F8F18375BEBCD733EC3686D1BE04DD7A740E7D3C5D7A9AD72FC3C32B206F8E20AF97E591E37897560BE9348936233A15E12D683689AB7F7CB085885C3C9AA926746E14B18792E28F38971F393E919E35B8717564D6F7150118747D7F5BC7F472AAEA6999F4930AFDD597644DA7FC558BC29044FADF4B3DDB256BB01779581D80DB2F19CE3C878CE1C028B0CB402CEFB23715A3E002CC937D447ECBD01C7DA4F9086DD90D60C1A81EE0EF05F7FBD714AA49740DFEF37AF33B0FB81B12EB13BE9E8EF789F51F34D95FED5615DEFE0ED1781148073693915B80BB2847758CC5ADB15427C4BD63EE2047F1063481275A31ED098E17A9F514050CE09E94D0323B6CBC298178661A1DAFEEE8702FBC1FCBABCF00DAE1C3B016CF67215E9A69A709AE916728AC89DAF09DA61CE292260EBA1A030F9153FE11AFE7EF39FF0803E0E6964E3AAF3C3A21C3855D020CE924F29BE85F8A0FC8B9DF7A4AD08A95C81961DF2876B53C930714277823D3EC2C8647A2349515A03841BED71E070FCC0F4B3747C8883F3B708D1255C36647E5F67E0EC6C7687B3C59CC0C3D495EA81A16FAC6C21B87E79B7D01E614EC6E994D1ADBD32782407349B5DC29441B5DC0EC3359067ED823092458141A8ED9358C29A2C3BF2FA5CF8D09F5D9F1D21975B51C327DB2A29794A1B87C879841ABA94498CB1CC1DE7AB623B94F0F2B59445335679ABAB0A8E44E9CEE3F591D24ACE9D6EE84701A56D3D8F541419208B86E367B1081F331521C9B9CDDD1740DB37D84C00291A1BA67DE2CB256D653771ACAE3A9FF2B9C44A33C5B41A528AE971A0AD75A83A0A4918AACC9A4E95A571D3E690BDACA13A589235B0B0026384CE0B97BE2AD97856A6D278B00927D84A1DCB5C75760358C8CE2DA314E622F661384BECD426F5C30A8C07787E517A2F29F3E50EABF8966E4EEBE7C68BA89BA5419911CAAA247EF4C193E3294727897BD7F3EAD8835BC061081B5ACE28A3018D0BAD7216838D8DC2A46501C8F691B3087F319263A6BDB2D35B01CB2DC474D663F8B713F3A25933102019B3BE1197DB4C347CB284501196C195978EC64A79C8220E5B790249C8A8AE2CB16310D3008E60202E51F64EEE1D0DBF93441C669368C679D4AC7A9680BD6FDAD3181AF4B2030642B5D72557A3A00B194575718CF7C419BA66C7E21C90A4009E98FEBC2A383CCDF5565B8D4D2D36D81703BDBA55AFB12C4B2A6646C060C3AB45F0FC58454D921FF37399969A73885167979CDB794290A6A4F09107083F5B6740B09ECB11B994C32DD55851719CC4E5B53E72C225E18F1B0E0F7FF08BCAD10A4EA67029D8CE3480DF2F585BC61432BBB18AE850E669E13F100BD53DA840BB357259741F430CCCA7FA830573F1393689DFB932B5E3D80AFF25615E4DBDA8F12E7870473223E971D79DFF84663C3958C1B283DA08D1BF12190189392B6AD63D5432241B64BB8D2F46F4240D10940F675D0BFC5D5259F69D43248A734F388C345416B35CFD7F71C657B0E979115344054BA5BC23002BEED67133EE4D028C5FE96B6FFF4FA2C0E9F57DDCE5E6590DC2294D7A60F321F8B54EE59D2F5E918D31737560F3D132BAAC0D6DD88C586322804BC2D8C505973F015308496AC35395FEA73AEC9078092E3365EAF39DF06BB91353234C54E3048D37B90A3A58D236360BF119FCDCCC72AE4BB24DEB24B79893557586A452AFB29C8037D510E9491F81B77D67AB0B4FA859D01005A9C9BF396ED8B82C12243AD6CE7D750481104975BC78EF3067DC86D955AB6BEF9EC88FA0EAEA5609AB814B0DE2D9020BF63651FCDE9EAF58947EECF4AF08306D5587B7C752E961FD2446594652AFF46B4231ED704CCF126550CD15DC47E3BB022B1294C5BA34FC3E90468004300A06ECBFB113122A73408279D6C51648BE9280FC96A9A9182829336721582819329F40E68C6E07ACF56B35D38FC7B90F9B836946D9C6E8BF2A5819E3AEDE9D39483EE8EC915577CE2BE21BE3567585E68BBD4D56EC13B1BEEF1469C7508D490584A828701771A82603BE050EA8995A12E6E85D2DC8BD5E0E4DBF2193FBD9A8744DA39288F23902BF477A04BA5D33977124E7D972D754B1F6D23F4725E04F4D3682471309AAF4BC221FFEACA545171B040C62BC559E5DD6E5E1126CF99C818E45A08A499514FFC0768CF60A8E359AFB4FB9AB8536E1D34FD379FE0285D104488159F97597DF70D73B9DC3B0EFA8C83F49CE10B7A0A30A444E16CA06F3FC3BD7A1DE022CE517AA6592ED99C270832ED88310CF5AC9E51C36A6767F6A17C541876E774A10F800A59A67868CCA4DB95286DDA525BF470C679F50EAAB92374E7090C2AA182F2008220F7C0DEFBE5E414168BE78E220A5F0913AD4E02282152081444D069A2802E4DC10E010B8B0C5C78F9E5E40591400709F7ECBFAE03DF93F9AEB65A68D4DDD8D9BF5C01D9A2767576D13D367A9008A14C4F4B3E162EDEDBF82F80613D8B0E045D115FF54D1321A8636E8C3832F26C9B3A62C561BC5A7F7E6FF0D5DB21585821BDBC32B8BA4D4C4E168A4E2573A77A2E9F488D7E5094530267DADF16E6621BB5B0A69687F35411A789A1C1703B0FDC8193583872DBD6E6B0EF13A349611FAFD9B48BBF57BCD78F4BCFA7F074A57480BBA9925F4D85FF35C22C038B62E396F5422C7AD23B05E216A5A3AB08DFE9FC10F5B716AE1529C8AAA3C7AD6604A59AA940352EB0B925CB604EE8B69C40D6F94FA544A130F5900037BFB0206049F5E87DF15AECA85B0D0D804C8A9145B9DA2DB986F955FC9CC01B9DD91F03FA257BE3E3514088873FD00897A4539C928EDDD960C17C534FF7A813CD0A875A2747A1762E74C25697F6374E969FD89F2D50D2FD48B8B6AB9514BCA376A49F6CF000F86637406053D8DFBB7C470FFF69CCFB1D0F6A97453B3E85E7F52AD31A162F1D4805BE1204173BFA8348F9BBC796DB1993DAEFAEBFF5AE8F9C6571688EB2AC049CD03EE6ADE8D973A881B71A4FEA1372D13DFFB50937969AD061B9CFA34B899E9667A1C065028DE08F45B6A14C9AEF99E9838E9C44CD2AD8CD53A6D28F6C5ED4A6D4218D27D4E9224C998EEB574F156EC4405223E2715F581B846CE8ED7B7F2128AEC207D9D817B99E2B988AB9CFB7368398EBBE03B9738B96B452096DF299E89550596CE1DB560CB1A39D39A750A128C4D70EB528C4266F09404B07C8D1D6A9BDC729DC4A4E797A449E86FD054DA6C29A2BDB3E7C26E3C994EA47588E19F5737EF1933AF36A80DA186A15C9E8341F7EE88465A0F5A762B97A60E0F318C4DF3072113FC7FAFEA97DE17F275E49E95E93F6B673A40FD60BF2B1589BD4DE37BA4C1AF7074386DC6957E14A14016A2D211CFB4A96AE41A541887C6E434985EA758ACE64217205917CD169B8016D9D500E238F01359E59B2D3DBA4C039B1FB290DA510516BFFDA5F559105AE2ACC96F0E5B707209A0C5A97D225296E0C56EF3C53998C50D6E166C7218ACCEE58270D7DD65EA666991A99A96114F1119778782102DB696E8500051B335D71107C9BAA4821CE119678BF01904A2787DBB9466B00318ED728672FF4D3C3041508FF79BBEF36D91F60FB8AA5623581F185BA832D8E43C252C925EC1C0EBAA14316AB57001DA9384FB90CCE5701792C4E8EFBB047DFBEAE183127B79F65B8D939A292A85A02F4FC180134FB6418AE81401284D1E5725CEC80262AE40EAE127621B548955BE315CD914A3C69FDC2BF242BC59CD588C67EF5A052BBACEE39247CC8CAA3A6022761279573FBD46733F5BF7B3EE3A1CDEEA1F76468882EA34C0E7696F3913A6D79486ACB560E0065B695F3FCFB75E4681418E49807CAE6DBC3057F0922B1C843875DAD67F094747D63D4754454684A51009EBB2BF26265B566A51269A5F4C3D434D364FC03C055A6562837B434F6529DD89241794C85EC97E4FF3C93121DD88FFD14810D033839789DCCB2C2EC5D104739882900FD656620BEC7E4F7144B409BB23948AE3F265C41FE41C0A1A648D547B28BFD64A0FB6C80B0014F7A609DA39904D426B6884B06FCE265D93B87B18A6EDDBCF195E9C9DB350749F728A2F19335C333324909FE460793BE959128D40A4E3DD895720B08D6A782B94DD66E65367F6EE155A2997E7A5C3427741213158BA850B8F555AFF3E40E88C3D9C1A823F989FAB24D32FD1A68A5E2F393A9055D9364A9CDC3846BC97B137E7D4EB463961EA7F983A6D21DCDA471F96BE45420DB04E9538CDBEC170D9D139832A363E9A986BD070ED3BF11F7A9C5BA8971D00799E987EF4B4BE9DAC7DAA37D4269780E2C3D7C0EFAF3D5BCF9B216E4493F300D990F7D7C8DCF76770A3FBE91E19C6C19EACC8A2D56F9166C36E8386A72C73FB524172AF1ECD2B7FC797F15B9C56174B885D9432FB59D1E703B8F0EA7CEB7C35563279F84D8161BF740717D78A0D01C45385022348D0E9BF8B1435A089B9C5FFDC51A014F600B92072898FE6ACA05F7F1439FE76FDC5076035201E3D47853927EFE62BD58B242B28D3AF03F29D0E1BC13AA0710C479AD2B1F82249ACA6B712AD2A3460BFE521D7A4C1CB7120AC32B7833849E71B0AA4BAE379E3E6AAA2555F970446736F0171A5450939E8D9481031F6C4D1E0E7D6C3A74788E474FDB52DB73D978E7655426DC39F2710839833D7A452A2584D3919D3D89B1E45EBF6D1E765FFB95D7EA71D803D9B702B33B2035731F68AD1095710247163132828340EB33DB2CF790B9E567C16FA6791E2DE021759B4292665B6CAB088F39670488A11CDE4E3A108ED59133EC60DF9A62AA34A0581B6774AA4287D8E27DA6CB30B5008EC0E14132B1EEA1212AC073DB766007EF9199810EE49279FA25A868C6D05AC810E90014A3DBF5CEB3E838B2413C143AA8FE9D9A9F8583ACF2C91812F27B681AFD1A94ED9B0D5E3DC874A32A534B728104020501DAD1B6551527E28AA369BF4FEDBDF702F10D92CD0BC9E8F20054433C852A29C3D89F83A86A29AE3F30326AD89C8EF5B305A28BDA4FC67446F1B01B58143BEADE60A8E53CC27A31869471E7085A79B12AB5D92D823CB675DBAADE952E4926AD4EA85B9D843CAE49C5A3B5877ED99D1F45CDBC4804DF27131EE368E63AD3958985F3DACE1C250D4B94BC116445BB009C0C4FAE21C0AE7D86E7A2B7919C2883AB69D4CEBA5B94D17974C28F989A6FDAF3838990D778ABFB4ACEAFF7B1E5ED716408F1364C2B030953FA766CA56A0E5D2225E17ADF981015AB0A57E0C10A17A09DFCE71938F1ED6931B7ECC6DBC68177073A30F64C4B8AC1D52D84A02C1FC591A929C2AF2F80E2FCFF711967D96450654CD34952A1640DF525D152EA82A704C8426E2A3ABDA8EBED244D0587AA3979A1DB932E345C2454ECA307C753CDCAFFF85829203EB682F52C9D5FCDE623F71203F76CF39BB7BE555A57E16612E799F3AFF8BCBB6A781688F81D272E89EAF1DA7B0BE32832B84D163E3DA9440323BE413F77E48D70AE488683EEF9CC1C1DD71B4CB2B091C323FA21FAD034A5AC97D48BD9858156B65C5E0D123BA1B88285AF76F869AC7669D49825C4A362690FC713F1EE1BFD044BBFBF69730887A22BA62C5EC4F5BAF504A8993DEFB149C11B9003949C580D7277721428878E71940393A893A75797D3D898D05E1FC251AC27583C3F3E267307BDEE57F4E8729936AD01F1E870BF7E24DE05A74AB139F628E1DC8DC4251E47FB6E39FAE76ADEB2BA4DCB3A72BF840C450B4966DBB88E360F58BBC233306EBE3BCDB1D2697E08D3B40EF7EE1C5D56DE93C0219C81ACE3FD5125C9B6D9B06BC8661934D1AC294D79E545BCFB23FCB56A48D5244FDBBF38A70719B39FCABE7E2831C6F089109D9E2B76A9F78C0DD5847C0D597C3B1201F8B599B604DB9D50FCD98E4ACCB1D59574A3B4959092BC6D4A38BB0F307F33F022D80E6BD483A44F805C2F759DC21D25C6E60520909E53BD66C046A6872C7DDB3A5B90ED7217796CE6CC4FA9A7EE03481C9A218725B95F4A8BA45E284E061B605F77954E61B7231ABAC8AE383F78454C423696E69C1BBE3EED9D63A5F349AEA16DA6ADA1DDC57DF142D98246233CD839BC5AE2182E9676B7448AE33AF300C9081B60CEA5FC1A79A3113BDCFEED7FFAE80FB949FE030F694E4FA75D8F0089BA2BD1549E7862F4B0A550CA8287E55805511B59BA9EE3DD11341672222355EE08CB91F5A88B2807971EAA9B4DE7C9CB6CA9D10A32612E5D5F081D6DAF6873464D1DC1F1FD3A7821C4B450AC7B5C02E47417A3F364595AD234E8961D9EAA3AD544252B9E873BE6F41A471C5B83488DBADEA88357E01E99D87EFE128C6F970973543FE35CFDF173A825C6BB5F38C67543CDA947476D1ABB17A41C57B56E8C8120DC0AA71D7CB9F74A2B8919C818EDE99366F520DE02B2C06721B56FE6DBA66B184B784C2F93F78954AA0993ABC615672D96557E66C70706320BEB050F6C7DDE8283E1F935A6B4419955ADA272085A0535F1FD3A2175128FDED58BD719F120FEB125FC3F174D7B92B6EF49D539F6DBC6C92EFAF22BDCB467C3DC30B0EC3B0A7B682E638001F29A49BE29C1B6D40872A9472BE0E7FB0941B1F5B815D16EC65127A1FFA20ED70F9D3C32B27E897C3EF03514B2A0EF7B0EA9B63B41F4D645CDD76E4F19752784F67C52A47E55BDF662FDA6098CCBB8574C4663D188FC7A3654B3FB7D8ED490A26E3E5AA4083427D010C08F37102E9D1AD41EB05A706F11CDCD2D607BE13735D40451FEB59B3692373467A9147D540D7B385864EA4CBF27C704F6F0D0F4AD0A09213348C9E71EF830EF60823652BD4DC0E86AFBF93A2B455DE8C48C0E7CA30EF2921F39BB560F8402904C01932D03F578B57EE48FC3D7E61D69634DC22D1B66E5DAFD8716FCE1F7D0DC67BDF1C7D3A533E27FBAF9EAA49AB3367C298839907178D93BFC798886E27B790062F7B3B4EA07FF8FD09D743046C3B889DAC13A0A5339AAE7C0434D51ACC8C33A8F8E214A7743C320A2DE24FACFF160CDBD6D93241D21DCB281D1FCA9ADACBE9DC6C8A07C94E17FD8DDF939752EE0E4D127C336808B6EA32A0E3BE154AE10425086E5D473D5ACEA59739A96418525B84507E6D3B516AB3E810ADB7AE9F4EE018734173E7C1D27CF4AD9D102012253C2A5F62322C0152D5937B8419F3B1872FAC4B924FC6279AB9447FADFCF1750A3A8C1F77DF403A72BDC2EDAE83ACE10F519C4950AFA86AAB0673DEB9865C85E14550F7D4E81C9272CAE323284825C24AB809766AF684624BEA9305FA101CDE008F98E086AA0E115FDD2D0FC104DABB0AB584744FF0F8D7BD3AE3B011608DE9B60341DF594136D68FB0DA5C895BA9E63FCF93A06F2BD129FA203930059BB824459AB63ECD4F5AA40EDBD75ABF092952A55ADF012C8D23DB9CD318C3308E07EE2271E9E8CE2BCFBD7AFFD2608CF890DD41724F32907091237EE229619751B4C9B6BD32EC74EB4873AE248ADF3CA1BE34B7890CC83173BE24CCC32941D6A5B168FDA3B3C7EDC4F4BBBD6742C602F3B527D40F7BA98EC5EF40D7B8CEC2A1326DD4D03A683F020208F22BBC905C5DEAF70798ABC27EAD406DA57521A4AC0EF36C7371F8E6E3847CE5BF22009A63B5680D3ACA581D6A751F2BD3A1303E6E8B1B583F9BA69B46291883AFE11182E710F3451A1CA2FA0BB4080BD675F33F83928A4E81A503A545E27E83496C4F28B9B5D3CBB1F092FDD8291DA1B77C209900A1F193D34E6A8FF75850A5F57F56C82D9CCA5AC860B828129A368F5926ED0728C532EC7B01F7F897825CE60D40C7BCA94AF80F732265FA43A3BBEB0EE798FF4EB42CC003CB1E41563574C377AF526063709EFAF90989AF9662966CA2B53DB31F0659A5F9F15A034EF3D82B36FD987CD8D79C214FD2D230C1CB4D31C8E5E6DB58DCFFD016640A24B0E6B8C023F7E33CE8AEA452AAB51A8187CF0293C8CE8763679A9D26DC2FFC4A258159C424B359AFA87BDF0101BEF3937540165F61D2BBF338EFAC34668D488979E0C2638FD921566BC5BC3217B49338DFC768F76B8B98AB9549940619391F7A6C3DE342578EA00802479F0D12012080C571C25661BC85B45A67F3C8D344FD74B1077724560A2693F4A741E53D7DA84D72E99349856413B86B4B6F635029E09C761E0E88075AC37CC030B2CC8F4EA3F554F28186E4F581B7B2E1DC9BF8A82052C067FD8A5FBFBD6EB69D9300989BCE0C3AF209649F7F929D9B77E17437E8F02108C47C8F68A9DE3B795E602469C530F0067F5F1AA6434533549B1433995646A3177E857BF049249C13E1B89C93B82EA110889B9E67504E20B8E01DEA7FC0283ED4E1F2DD59718CE9B6358C15128EBAEAFD3C9E08E25330791902CD2B07273702FB80C9230A10FA827E00A190B557C29DC30E3D74FC73DAD1881A77D763FCB1C51FEBC60A8CB065AAEB0DF0AECADB3C0FD922EAAA5BB9A48B07918674B5785C4F84E47AC22F8C9194FFBAD3FDA1706EDC24DFE200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark%!FontType3-1.0: PingFangSC-Ultralight19 dict dup begin/FontType 3 def/FontMatrix matrix def/FontBBox {0 0 0 0} readonly def/PaintType 0 def/StrokeWidth 0 def/BuildGlyph{save 3 1 roll1 index dupbegin/ShowProc get 3 1 roll1 index /CharProcs get exch get exec7 -1 roll execendrestore} bind def/BuildChar{1 index /Encoding get exch get1 index /BuildGlyph get exec} bind def/$SP{3 -1 roll dup /SetupSubFont get execdup setfontexch 0 0 2 index stringwidth} bind def/$SPW{4 -1 roll dup /SetupSubFont get execdup setfont3 1 roll 0 0 0 4 2 roll} bind def/$SPTW{5 -1 roll dup /SetupSubFont get execdup setfont4 1 roll neg  0 3 -1 roll 0} bind def/$RP{6 -1 roll dup /SetupSubFont get execdup setfont 5 1 rolltranslate -90 rotate 0 0 0 4 2 roll} bind def/SetupSubFont{dup /PaintType get 1 index /StrokeWidth get3 -1 roll /$SubFontArray get 4 1 roll3 index 3 index getdup /PaintType known{dup /PaintType get}{0}ifelse1 index /StrokeWidth known{1 index /StrokeWidth get}{0}ifelse3 index ne exch 4 index ne or{dup length 2 add dict begin{1 index /FID eq {pop pop}{def}ifelse}forall/StrokeWidth exch def/PaintType exch defcurrentdict enddup /CIDFontName known{/Anonymous exch /CIDFont defineresource}{/Anonymous exch definefont}ifelsedup 4 1 roll put}{ pop pop pop get}ifelse} bind def/ShowProc{systemdict /rectfill known{0 setcachelimit}if6 -1 roll dup /FontMatrix get exch /FontBBox get aload pop4 index transform 4 2 roll5 -1 roll transform 4 2 rollsetcachedevicemoveto dup type /stringtype eq {show}{glyphshow} ifelse} bind def/FontInfo 4 dict dup begin/Registry (Adobe/) def/Ordering (Identity/) def/Supplement 0 defend readonly def/FontName /PingFangSC-Ultralight def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 33 /cid94 putreadonly def/$SubFontArray [/AAAAAD+PingFangHK-Ultralight findfont ] def/CharProcs 3 dictdup /cid0 {(\000) 0 $SP} 2 index /.notdef 2 index put putdup /cid94 {(\001) 0 $SP} put def end dup /FontName get exch definefont pop%RBIEndFontSubset
/PingFangSC-Ultralight cguidfix
/F3.1/PingFangSC-Ultralight renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs3 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 sc
q
0 0 448 229 rc
0 229 m
448 229 l
448 0 l
0 0 l
h
f
/Cs2 SC
1 1 1 sc
-1145 762 m
1459 762 l
1459 -998 l
-1145 -998 l
h
-1145 762 m
f
50.5 189.17667 m
194.5 189.17667 l
194.5 149.17667 l
50.5 149.17667 l
h
50.5 189.17667 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -277 68 cm
327.5 -121.17667 m
471.5 -121.17667 l
471.5 -81.176666 l
327.5 -81.176666 l
h
327.5 -121.17667 m
S
0 i
1 1 1 sc
CM
133.60658 179.78326 m
139.46448 173.9254 139.46448 164.42793 133.60658 158.57008 c
127.74873 152.71219 118.25127 152.71219 112.39341 158.57008 c
106.53552 164.42793 106.53552 173.9254 112.39341 179.78326 c
118.25127 185.64114 127.74873 185.64114 133.60658 179.78326 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -277 68 cm
410.6066 -111.78326 m
416.46448 -105.9254 416.46448 -96.42794 410.6066 -90.570076 c
404.74872 -84.712189 395.25128 -84.712189 389.3934 -90.570076 c
383.53552 -96.42794 383.53552 -105.9254 389.3934 -111.78326 c
395.25128 -117.64114 404.74872 -117.64114 410.6066 -111.78326 c
S
/Cs3 SC
0 sc
0 i
1 0 0 -1 123 169.17667 cm
/F1.1[ 20 0 0 -20 0 0]sf
-7 7.2200012 m
(!)s
/Cs1 SC
0 sc
1 0 0 -1 25.520996 174.34023 cm
/F2.1[ 16 0 0 -16 0 0]sf
-14.552 6 m
(!"#)[ 9.168000 12.432000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
85.156471 179.78326 m
91.014359 173.9254 91.014359 164.42793 85.156471 158.57008 c
79.298615 152.71219 69.801155 152.71219 63.943291 158.57008 c
58.0854 164.42793 58.0854 173.9254 63.943291 179.78326 c
69.801155 185.64114 79.298615 185.64114 85.156471 179.78326 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -277 68 cm
362.15646 -111.78326 m
368.01437 -105.9254 368.01437 -96.42794 362.15646 -90.570076 c
356.29861 -84.712189 346.80115 -84.712189 340.9433 -90.570076 c
335.08539 -96.42794 335.08539 -105.9254 340.9433 -111.78326 c
346.80115 -117.64114 356.29861 -117.64114 362.15646 -111.78326 c
S
/Cs3 SC
0 sc
0 i
1 0 0 -1 74.549881 169.17667 cm
/F1.1[ 20 0 0 -20 0 0]sf
-6.48 7.2200012 m
(")s
/Cs1 SC
0 sc
1 0 0 -1 216.93013 173.16899 cm
/F3.1[ 70 0 0 -70 0 0]sf
-11.655 25 m
(!)s
/Cs2 SC
1 1 1 sc
CM
350.45096 212.55214 m
363.45096 212.55214 l
363.45096 185.55214 l
350.45096 185.55214 l
h
f
396.95096 212.55214 m
404.95096 212.55214 l
404.95096 185.55214 l
396.95096 185.55214 l
h
f
427.95096 212.55214 m
432.95096 212.55214 l
432.95096 185.55214 l
427.95096 185.55214 l
h
f
247.45096 185.55214 m
255.95096 185.55214 l
255.95096 158.55214 l
247.45096 158.55214 l
h
f
337.95096 185.55214 m
345.95096 185.55214 l
345.95096 158.55214 l
337.95096 158.55214 l
h
f
395.45096 185.55214 m
403.45096 185.55214 l
403.45096 158.55214 l
395.45096 158.55214 l
h
f
/Cs1 SC
0 sc
1 0 0 -1 337.95096 161.05214 cm
/F2.1[ 16 0 0 -16 0 0]sf
-104.95095 -34.5 m
($%)[ 10.672000 0.000000 ] xS
/Cs2 SC
0 0 0 sc
-90.278954 -34.5 m
(&)s
/F2.1[ 10 0 0 -10 0 0]sf
-81.958954 -33 m
(')s
/Cs1 SC
0 sc
/F2.1[ 16 0 0 -16 0 0]sf
-77.268951 -34.5 m
(\(%\)\(%*%+%,+%)[ 3.504000 4.000000 8.080000 3.504000 4.000000 4.336000 4.000000 10.672000 4.000000 16.000000 10.672000 0.000000 ] xS
/Cs2 SC
0 0 0 sc
-0.50095409 -34.5 m
(&)s
/F2.1[ 10 0 0 -10 0 0]sf
7.819046 -33 m
(')s
0.2 0.2 0.2 sc
/F2.1[ 16 0 0 -16 0 0]sf
12.509046 -34.5 m
(\(%-)[ 3.504000 4.000000 0.000000 ] xS
0 0 0 sc
25.437046 -34.5 m
(&)s
/F2.1[ 10 0 0 -10 0 0]sf
33.757046 -33 m
('%)[ 4.690000 0.000000 ] xS
/Cs1 SC
0 sc
/F2.1[ 16 0 0 -16 0 0]sf
40.947044 -34.5 m
(./%)[ 3.504000 10.672000 0.000000 ] xS
/Cs2 SC
0.2 0.2 0.2 sc
59.123047 -34.5 m
(0)s
/Cs1 SC
0 sc
67.203049 -34.5 m
(-)s
/Cs2 SC
0 0 0 sc
72.627045 -34.5 m
(1)s
/F2.1[ 10 0 0 -10 0 0]sf
79.971046 -33 m
(')s
/Cs1 SC
0 sc
/F2.1[ 16 0 0 -16 0 0]sf
84.661049 -34.5 m
(2)s
/Cs2 SC
0.2 0.2 0.2 sc
89.925049 -34.5 m
(2)s
/Cs1 SC
0 sc
-104.95095 -7.5 m
($%)[ 10.672000 0.000000 ] xS
/Cs2 SC
0.2 0.2 0.2 sc
-90.278954 -7.5 m
(0)s
/Cs1 SC
0 sc
-82.198952 -7.5 m
(-)s
/Cs2 SC
0 0 0 sc
-76.774956 -7.5 m
(1)s
/F2.1[ 10 0 0 -10 0 0]sf
-69.430954 -6 m
(#)s
/Cs1 SC
0 sc
/F2.1[ 16 0 0 -16 0 0]sf
-64.740952 -7.5 m
(2\(%344-)[ 5.264000 3.504000 4.000000 8.176000 6.752000 6.752000 0.000000 ] xS
/Cs2 SC
0 0 0 sc
-24.868954 -7.5 m
(1)s
/F2.1[ 10 0 0 -10 0 0]sf
-17.524954 -6 m
(#)s
/Cs1 SC
0 sc
/F2.1[ 16 0 0 -16 0 0]sf
-12.834954 -7.5 m
(2\(%)[ 5.264000 3.504000 0.000000 ] xS
/Cs2 SC
0.2 0.2 0.2 sc
-0.066954121 -7.5 m
(0)s
/Cs1 SC
0 sc
8.0130463 -7.5 m
(%+%,+%)[ 4.000000 10.672000 4.000000 16.000000 10.672000 0.000000 ] xS
0.31999999 w
0 J
0 j
/Cs2 SC
0.2 0.2 0.2 sc
57.357044 -5.138485 m
65.437042 -5.138485 l
S
57.357044 -7.5 m
(0)s
/Cs1 SC
0 sc
65.437042 -5.138485 m
70.861046 -5.138485 l
S
65.437042 -7.5 m
(-)s
/Cs2 SC
0 0 0 sc
70.861046 -5.138485 m
78.205048 -5.138485 l
S
70.861046 -7.5 m
(1)s
78.205048 -5.138485 m
82.895042 -5.138485 l
S
/F2.1[ 10 0 0 -10 0 0]sf
78.205048 -6 m
(#)s
/Cs1 SC
0 sc
82.895042 -5.138485 m
88.159042 -5.138485 l
S
/F2.1[ 16 0 0 -16 0 0]sf
82.895042 -7.5 m
(2)s
-104.95095 19.5 m
($%\)\(%)[ 10.672000 4.000000 8.080000 3.504000 0.000000 ] xS
/Cs2 SC
0 0 0 sc
-74.694954 19.5 m
(&)s
/F2.1[ 10 0 0 -10 0 0]sf
-66.374954 21 m
(#)s
/Cs1 SC
0 sc
/F2.1[ 16 0 0 -16 0 0]sf
-61.684956 19.5 m
(\(%5%+%,+%)[ 3.504000 4.000000 6.208000 4.000000 10.672000 4.000000 16.000000 10.672000 0.000000 ] xS
/Cs2 SC
0 0 0 sc
1.3710458 19.5 m
(&)s
/F2.1[ 10 0 0 -10 0 0]sf
9.6910458 21 m
(#)s
CM
159.57196 149.5 m
169.57196 167.5 l
179.57196 149.5 l
h
159.57196 149.5 m
f
1 w
1 J
1 j
0.60000002 i
1 0 0 -1 -277 68 cm
436.57196 -81.5 m
446.57196 -99.5 l
456.57196 -81.5 l
h
436.57196 -81.5 m
S
0 i
1 1 1 sc
CM
63.328861 89.195282 m
71.328865 97.195282 l
266.83405 97.195282 l
274.83405 89.195282 l
274.83405 8.6952839 l
266.83405 0.69528371 l
71.328865 0.69528371 l
63.328861 8.6952839 l
h
63.328861 89.195282 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -277 68 cm
340.32886 -21.195284 m
348.32886 -29.195284 l
543.83405 -29.195284 l
551.83405 -21.195284 l
551.83405 59.304718 l
543.83405 67.304718 l
348.32886 67.304718 l
340.32886 59.304718 l
h
340.32886 -21.195284 m
S
0 i
1 1 1 sc
CM
163.08018 85.034111 m
167.96176 80.152557 167.96176 72.238007 163.08018 67.356461 c
158.19864 62.474884 150.28409 62.474884 145.40254 67.356461 c
140.52097 72.238007 140.52097 80.152557 145.40254 85.034111 c
150.28409 89.91568 158.19864 89.91568 163.08018 85.034111 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -277 68 cm
440.0802 -17.034109 m
444.96176 -12.152558 444.96176 -4.238009 440.0802 0.64354128 c
435.19864 5.5251164 427.28409 5.5251164 422.40253 0.64354128 c
417.52097 -4.238009 417.52097 -12.152558 422.40253 -17.034109 c
427.28409 -21.915684 435.19864 -21.915684 440.0802 -17.034109 c
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 154.24136 76.195282 cm
/F1.1[ 16 0 0 -16 0 0]sf
-4.448 5.776001 m
(#)s
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 -277 68 cm
446.53168 -81.5 m
446.29749 -29.195284 l
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 36.646862 73.354073 cm
/F2.1[ 16 0 0 -16 0 0]sf
-8.9040003 6 m
(6#)[ 10.304000 0.000000 ] xS
1 0 0 -1 37 206.75095 cm
-27.143999 6 m
(783&*9#)[ 10.592000 8.496000 8.176000 8.320000 4.336000 6.864000 0.000000 ] xS
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 -277 68 cm
410.12723 -0.82794791 m
406.51297 -0.10490385 402.78207 0.30865598 399.24136 0.13477594 c
384.81906 -0.57348657 378.60797 -5.9272437 380.33405 -10.695284 c
382.06015 -15.463324 390.91174 -17.403545 405.33405 -16.695284 c
410.79568 -16.427069 415.83609 -15.143023 419.99103 -13.650988 c
S
0 i
CM
140.84811 70.931763 m
132.34084 71.723045 l
133.91823 65.934105 l
h
140.84811 70.931763 m
f
0 J
0 j
1 0 0 -1 -277 68 cm
417.84811 -2.9317656 m
409.34082 -3.723042 l
410.91824 2.0658979 l
h
417.84811 -2.9317656 m
S
/Cs1 SC
0 sc
1 0 0 -1 94.834053 54.028221 cm
-27.075001 6 m
(*%:)[ 4.336000 4.000000 0.000000 ] xS
/Cs2 SC
0 0 0 sc
-13.603 6 m
(;)s
/F2.1[ 10 0 0 -10 0 0]sf
-7.4590001 7.5 m
(<%)[ 4.690000 0.000000 ] xS
/F2.1[ 16 0 0 -16 0 0]sf
-0.26899999 6 m
(/%<)[ 10.672000 4.000000 0.000000 ] xS
/Cs1 SC
0 sc
21.907 6 m
(=)s
1 J
1 j
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 -277 68 cm
453.24078 -12.351851 m
459.01984 -13.015134 465.09677 -13.307637 470.33405 -12.695284 c
486.08374 -10.853801 488.25058 -6.5114689 486.83405 -1.6952838 c
485.41754 3.1209013 481.08374 6.1461987 465.33405 4.3047161 c
457.47864 3.3862467 448.97809 0.2743811 442.43011 -2.6144099 c
S
0 i
CM
168.32991 79.163361 m
176.68683 77.385193 l
175.79543 83.318611 l
h
168.32991 79.163361 m
f
0 J
0 j
1 0 0 -1 -277 68 cm
445.32993 -11.163363 m
453.68683 -9.3851957 l
452.79544 -15.318609 l
h
445.32993 -11.163363 m
S
1 J
1 j
0.60000002 i
441.55447 11.644026 m
442.53448 14.46134 443.31989 17.39279 443.74136 20.304716 c
445.77115 34.328316 443.2222 39.038277 438.40601 41.304718 c
433.58984 43.571156 428.77115 42.328316 426.74136 28.304716 c
425.68851 21.030569 426.93866 11.482133 428.38593 3.9759521 c
S
0 i
CM
161.39189 63.709 m
161.79688 55.174599 l
167.30869 57.545273 l
h
161.39189 63.709 m
f
0 J
0 j
1 0 0 -1 -277 68 cm
438.39188 4.2909999 m
438.79688 12.825399 l
444.30869 10.454728 l
h
438.39188 4.2909999 m
S
1 1 1 sc
CM
118.83405 28.195284 m
126.83405 28.195284 l
126.83405 6.1952839 l
118.83405 6.1952839 l
h
f
0.2 0.2 0.2 sc
1 0 0 -1 169.33405 17.195284 cm
-50.5 6 m
(0)s
/Cs1 SC
0 sc
-42.419998 6 m
(%:)[ 4.000000 0.000000 ] xS
/Cs2 SC
0 0 0 sc
-33.284 6 m
(;)s
/F2.1[ 10 0 0 -10 0 0]sf
-27.139999 7.5 m
(<%)[ 4.690000 0.000000 ] xS
/F2.1[ 16 0 0 -16 0 0]sf
-19.950001 6 m
(/%<)[ 10.672000 4.000000 0.000000 ] xS
/Cs1 SC
0 sc
2.2260001 6 m
(=%)[ 5.168000 0.000000 ] xS
/Cs2 SC
0 0 0 sc
11.394 6 m
(;)s
/F2.1[ 10 0 0 -10 0 0]sf
17.538 7.5 m
(<%)[ 4.690000 0.000000 ] xS
/F2.1[ 16 0 0 -16 0 0]sf
24.728001 6 m
(>/%')[ 3.504000 10.672000 4.000000 0.000000 ] xS
/Cs1 SC
0 sc
1 0 0 -1 242.33405 54.028221 cm
-28.011 6 m
(5%:)[ 6.208000 4.000000 0.000000 ] xS
/Cs2 SC
0 0 0 sc
-12.667 6 m
(;)s
/F2.1[ 10 0 0 -10 0 0]sf
-6.5229998 7.5 m
(<%)[ 4.690000 0.000000 ] xS
/F2.1[ 16 0 0 -16 0 0]sf
0.667 6 m
(/%')[ 10.672000 4.000000 0.000000 ] xS
/Cs1 SC
0 sc
22.843 6 m
(=)s
ep
end
%%Trailer
%%EOF
